ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_idiv
  20              		.section	.text.ADC_Init,"ax",%progbits
  21              		.align	2
  22              		.global	ADC_Init
  23              		.code	16
  24              		.thumb_func
  25              		.type	ADC_Init, %function
  26              	ADC_Init:
  27              	.LFB3:
  28              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 2


  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u, 0x00000000u, 0x00000000u, 0x000000
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 3


  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  29              		.loc 1 95 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 4


 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  37              		.loc 1 172 0
  38 0002 0021     		movs	r1, #0
  39 0004 0F20     		movs	r0, #15
  40 0006 FFF7FEFF 		bl	CyIntSetPriority
  41              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  42              		.loc 1 173 0
  43 000a 4249     		ldr	r1, .L12
  44 000c 0F20     		movs	r0, #15
  45 000e FFF7FEFF 		bl	CyIntSetVector
  46              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  47              		.loc 1 177 0
  48 0012 0F22     		movs	r2, #15
  49 0014 404B     		ldr	r3, .L12+4
  50 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 5


 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  51              		.loc 1 180 0
  52 0018 404B     		ldr	r3, .L12+8
  53 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  54              		.loc 1 178 0
  55 001c 002B     		cmp	r3, #0
  56 001e 01DA     		bge	.L10
  57 0020 3F49     		ldr	r1, .L12+12
  58 0022 00E0     		b	.L2
  59              	.L10:
  60 0024 3F49     		ldr	r1, .L12+16
  61              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  62              		.loc 1 178 0 is_stmt 0 discriminator 4
  63 0026 404A     		ldr	r2, .L12+20
  64 0028 1368     		ldr	r3, [r2]
  65 002a 0B43     		orrs	r3, r1
  66 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  67              		.loc 1 182 0 is_stmt 1 discriminator 4
  68 002e 3F4A     		ldr	r2, .L12+24
  69 0030 3F4B     		ldr	r3, .L12+28
  70 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  71              		.loc 1 183 0 discriminator 4
  72 0034 3F4A     		ldr	r2, .L12+32
  73 0036 404B     		ldr	r3, .L12+36
  74 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  75              		.loc 1 184 0 discriminator 4
  76 003a 0023     		movs	r3, #0
  77 003c 3F4A     		ldr	r2, .L12+40
  78 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  79              		.loc 1 185 0 discriminator 4
  80 0040 3F49     		ldr	r1, .L12+44
  81 0042 404A     		ldr	r2, .L12+48
  82 0044 1160     		str	r1, [r2]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  83              		.loc 1 186 0 discriminator 4
  84 0046 4049     		ldr	r1, .L12+52
  85 0048 404A     		ldr	r2, .L12+56
  86 004a 1160     		str	r1, [r2]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  87              		.loc 1 190 0 discriminator 4
  88 004c 404A     		ldr	r2, .L12+60
  89 004e 1168     		ldr	r1, [r2]
  90 0050 8020     		movs	r0, #128
  91 0052 4002     		lsls	r0, r0, #9
  92 0054 0143     		orrs	r1, r0
  93 0056 1160     		str	r1, [r2]
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 6


 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
  94              		.loc 1 193 0 discriminator 4
  95 0058 3E49     		ldr	r1, .L12+64
  96 005a 0A68     		ldr	r2, [r1]
  97 005c 0243     		orrs	r2, r0
  98 005e 0A60     		str	r2, [r1]
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  99              		.loc 1 197 0 discriminator 4
 100 0060 3D4A     		ldr	r2, .L12+68
 101 0062 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 102              		.loc 1 198 0 discriminator 4
 103 0064 3D4A     		ldr	r2, .L12+72
 104 0066 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 105              		.loc 1 199 0 discriminator 4
 106 0068 0122     		movs	r2, #1
 107 006a 3D4B     		ldr	r3, .L12+76
 108 006c 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 109              		.loc 1 206 0 discriminator 4
 110 006e 3D4A     		ldr	r2, .L12+80
 111 0070 1168     		ldr	r1, [r2]
 112              	.LVL2:
 113 0072 3D4B     		ldr	r3, .L12+84
 114 0074 0B40     		ands	r3, r1
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 115              		.loc 1 221 0 discriminator 4
 116 0076 8021     		movs	r1, #128
 117              	.LVL3:
 118 0078 8905     		lsls	r1, r1, #22
 119 007a 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 7


 120              	.LVL4:
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 121              		.loc 1 226 0 discriminator 4
 122 007c 1360     		str	r3, [r2]
 123              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 124              		.loc 1 232 0 discriminator 4
 125 007e 0024     		movs	r4, #0
 126 0080 45E0     		b	.L3
 127              	.LVL6:
 128              	.L9:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 129              		.loc 1 234 0
 130 0082 3A49     		ldr	r1, .L12+88
 131 0084 A200     		lsls	r2, r4, #2
 132 0086 5058     		ldr	r0, [r2, r1]
 133 0088 DC23     		movs	r3, #220
 134 008a 9B01     		lsls	r3, r3, #6
 135 008c 0340     		ands	r3, r0
 136              	.LVL7:
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 137              		.loc 1 236 0
 138 008e 0919     		adds	r1, r1, r4
 139 0090 097C     		ldrb	r1, [r1, #16]
 140 0092 0B43     		orrs	r3, r1
 141              	.LVL8:
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 142              		.loc 1 253 0
 143 0094 3649     		ldr	r1, .L12+92
 144 0096 8C46     		mov	ip, r1
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 8


 145 0098 6244     		add	r2, r2, ip
 146 009a 1360     		str	r3, [r2]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 147              		.loc 1 255 0
 148 009c C307     		lsls	r3, r0, #31
 149 009e 07D5     		bpl	.L4
 150              	.LVL9:
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 151              		.loc 1 257 0
 152 00a0 2D49     		ldr	r1, .L12+68
 153 00a2 0A68     		ldr	r2, [r1]
 154              	.LVL10:
 155 00a4 0123     		movs	r3, #1
 156 00a6 A340     		lsls	r3, r3, r4
 157 00a8 1B04     		lsls	r3, r3, #16
 158 00aa 1B0C     		lsrs	r3, r3, #16
 159 00ac 1343     		orrs	r3, r2
 160 00ae 0B60     		str	r3, [r1]
 161              	.LVL11:
 162              	.L4:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 163              		.loc 1 260 0
 164 00b0 A300     		lsls	r3, r4, #2
 165 00b2 2E4A     		ldr	r2, .L12+88
 166              	.LVL12:
 167 00b4 9B58     		ldr	r3, [r3, r2]
 168 00b6 9B07     		lsls	r3, r3, #30
 169 00b8 07D5     		bpl	.L5
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 170              		.loc 1 262 0
 171 00ba 2849     		ldr	r1, .L12+72
 172 00bc 0A68     		ldr	r2, [r1]
 173              	.LVL13:
 174 00be 0123     		movs	r3, #1
 175 00c0 A340     		lsls	r3, r3, r4
 176 00c2 1B04     		lsls	r3, r3, #16
 177 00c4 1B0C     		lsrs	r3, r3, #16
 178 00c6 1343     		orrs	r3, r2
 179 00c8 0B60     		str	r3, [r1]
 180              	.L5:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 9


 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 181              		.loc 1 282 0
 182 00ca A300     		lsls	r3, r4, #2
 183 00cc 274A     		ldr	r2, .L12+88
 184              	.LVL14:
 185 00ce 9B58     		ldr	r3, [r3, r2]
 186 00d0 9A05     		lsls	r2, r3, #22
 187 00d2 02D5     		bpl	.L11
 188              	.LVL15:
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 189              		.loc 1 284 0
 190 00d4 8020     		movs	r0, #128
 191              	.LVL16:
 192 00d6 C000     		lsls	r0, r0, #3
 193 00d8 01E0     		b	.L6
 194              	.LVL17:
 195              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 196              		.loc 1 288 0
 197 00da 8020     		movs	r0, #128
 198              	.LVL18:
 199 00dc 4001     		lsls	r0, r0, #5
 200              	.L6:
 201              	.LVL19:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 202              		.loc 1 291 0
 203 00de DB05     		lsls	r3, r3, #23
 204 00e0 04D4     		bmi	.L7
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 205              		.loc 1 298 0
 206 00e2 6300     		lsls	r3, r4, #1
 207 00e4 0021     		movs	r1, #0
 208 00e6 234A     		ldr	r2, .L12+96
 209 00e8 9952     		strh	r1, [r3, r2]
 210 00ea 03E0     		b	.L8
 211              	.L7:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 10


 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 212              		.loc 1 305 0
 213 00ec 4208     		lsrs	r2, r0, #1
 214 00ee 6300     		lsls	r3, r4, #1
 215 00f0 2049     		ldr	r1, .L12+96
 216 00f2 5A52     		strh	r2, [r3, r1]
 217              	.L8:
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 218              		.loc 1 311 0 discriminator 2
 219 00f4 204B     		ldr	r3, .L12+100
 220 00f6 5843     		muls	r0, r3
 221              	.LVL20:
 222 00f8 204B     		ldr	r3, .L12+104
 223 00fa 9C46     		mov	ip, r3
 224 00fc 6044     		add	r0, r0, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 225              		.loc 1 312 0 discriminator 2
 226 00fe 2049     		ldr	r1, .L12+108
 227 0100 FFF7FEFF 		bl	__aeabi_idiv
 228              	.LVL21:
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 229              		.loc 1 311 0 discriminator 2
 230 0104 00B2     		sxth	r0, r0
 231 0106 A200     		lsls	r2, r4, #2
 232 0108 1E4B     		ldr	r3, .L12+112
 233 010a D050     		str	r0, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
 234              		.loc 1 232 0 discriminator 2
 235 010c 0134     		adds	r4, r4, #1
 236              	.LVL22:
 237              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 238              		.loc 1 232 0 is_stmt 0 discriminator 1
 239 010e 032C     		cmp	r4, #3
 240 0110 B7D9     		bls	.L9
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 241              		.loc 1 314 0 is_stmt 1
 242              		@ sp needed
 243              	.LVL23:
 244 0112 10BD     		pop	{r4, pc}
 245              	.L13:
 246              		.align	2
 247              	.L12:
 248 0114 00000000 		.word	ADC_ISR
 249 0118 20003A40 		.word	1077542944
 250 011c 80033A40 		.word	1077543808
 251 0120 70201013 		.word	319823984
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 11


 252 0124 70200013 		.word	318775408
 253 0128 00003A40 		.word	1077542912
 254 012c 85000A80 		.word	-2146828155
 255 0130 04003A40 		.word	1077542916
 256 0134 0000FF07 		.word	134152192
 257 0138 18003A40 		.word	1077542936
 258 013c 1C003A40 		.word	1077542940
 259 0140 02000A00 		.word	655362
 260 0144 10003A40 		.word	1077542928
 261 0148 02000200 		.word	131074
 262 014c 14003A40 		.word	1077542932
 263 0150 00033A40 		.word	1077543680
 264 0154 40033A40 		.word	1077543744
 265 0158 28023A40 		.word	1077543464
 266 015c 38023A40 		.word	1077543480
 267 0160 18023A40 		.word	1077543448
 268 0164 30003A40 		.word	1077542960
 269 0168 FEFFFFDF 		.word	-536870914
 270 016c 00000000 		.word	.LANCHOR0
 271 0170 80003A40 		.word	1077543040
 272 0174 00000000 		.word	ADC_offset
 273 0178 10270000 		.word	10000
 274 017c E40C0000 		.word	3300
 275 0180 C8190000 		.word	6600
 276 0184 00000000 		.word	ADC_countsPer10Volt
 277              		.cfi_endproc
 278              	.LFE3:
 279              		.size	ADC_Init, .-ADC_Init
 280              		.section	.text.ADC_Enable,"ax",%progbits
 281              		.align	2
 282              		.global	ADC_Enable
 283              		.code	16
 284              		.thumb_func
 285              		.type	ADC_Enable, %function
 286              	ADC_Enable:
 287              	.LFB4:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 288              		.loc 1 331 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 12


 292 0000 10B5     		push	{r4, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 4, -8
 295              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 296              		.loc 1 332 0
 297 0002 094B     		ldr	r3, .L17
 298 0004 1B68     		ldr	r3, [r3]
 299 0006 002B     		cmp	r3, #0
 300 0008 0CDB     		blt	.L14
 301              	.L16:
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 302              		.loc 1 336 0 discriminator 1
 303 000a 084B     		ldr	r3, .L17+4
 304 000c 1B68     		ldr	r3, [r3]
 305 000e 002B     		cmp	r3, #0
 306 0010 FBDB     		blt	.L16
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 307              		.loc 1 342 0
 308 0012 054A     		ldr	r2, .L17
 309 0014 1368     		ldr	r3, [r2]
 310 0016 8021     		movs	r1, #128
 311 0018 0906     		lsls	r1, r1, #24
 312 001a 0B43     		orrs	r3, r1
 313 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 314              		.loc 1 345 0
 315 001e 0A20     		movs	r0, #10
 316 0020 FFF7FEFF 		bl	CyDelayUs
 317              	.LVL24:
 318              	.L14:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 319              		.loc 1 347 0
 320              		@ sp needed
 321 0024 10BD     		pop	{r4, pc}
 322              	.L18:
 323 0026 C046     		.align	2
 324              	.L17:
 325 0028 00003A40 		.word	1077542912
 326 002c 08023A40 		.word	1077543432
 327              		.cfi_endproc
 328              	.LFE4:
 329              		.size	ADC_Enable, .-ADC_Enable
 330              		.section	.text.ADC_Start,"ax",%progbits
 331              		.align	2
 332              		.global	ADC_Start
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 13


 333              		.code	16
 334              		.thumb_func
 335              		.type	ADC_Start, %function
 336              	ADC_Start:
 337              	.LFB2:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 338              		.loc 1 64 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342 0000 10B5     		push	{r4, lr}
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 4, -8
 345              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 346              		.loc 1 66 0
 347 0002 064B     		ldr	r3, .L21
 348 0004 1B78     		ldrb	r3, [r3]
 349 0006 002B     		cmp	r3, #0
 350 0008 04D1     		bne	.L20
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 351              		.loc 1 68 0
 352 000a FFF7FEFF 		bl	ADC_Init
 353              	.LVL25:
  69:Generated_Source\PSoC4/ADC.c ****     }
 354              		.loc 1 69 0
 355 000e 0122     		movs	r2, #1
 356 0010 024B     		ldr	r3, .L21
 357 0012 1A70     		strb	r2, [r3]
 358              	.L20:
  71:Generated_Source\PSoC4/ADC.c **** }
 359              		.loc 1 71 0
 360 0014 FFF7FEFF 		bl	ADC_Enable
 361              	.LVL26:
  72:Generated_Source\PSoC4/ADC.c **** 
 362              		.loc 1 72 0
 363              		@ sp needed
 364 0018 10BD     		pop	{r4, pc}
 365              	.L22:
 366 001a C046     		.align	2
 367              	.L21:
 368 001c 00000000 		.word	.LANCHOR1
 369              		.cfi_endproc
 370              	.LFE2:
 371              		.size	ADC_Start, .-ADC_Start
 372              		.section	.text.ADC_Stop,"ax",%progbits
 373              		.align	2
 374              		.global	ADC_Stop
 375              		.code	16
 376              		.thumb_func
 377              		.type	ADC_Stop, %function
 378              	ADC_Stop:
 379              	.LFB5:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 14


 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 380              		.loc 1 366 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 385              		.loc 1 367 0
 386 0000 024A     		ldr	r2, .L24
 387 0002 1368     		ldr	r3, [r2]
 388 0004 5B00     		lsls	r3, r3, #1
 389 0006 5B08     		lsrs	r3, r3, #1
 390 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 391              		.loc 1 368 0
 392              		@ sp needed
 393 000a 7047     		bx	lr
 394              	.L25:
 395              		.align	2
 396              	.L24:
 397 000c 00003A40 		.word	1077542912
 398              		.cfi_endproc
 399              	.LFE5:
 400              		.size	ADC_Stop, .-ADC_Stop
 401              		.section	.text.ADC_StartConvert,"ax",%progbits
 402              		.align	2
 403              		.global	ADC_StartConvert
 404              		.code	16
 405              		.thumb_func
 406              		.type	ADC_StartConvert, %function
 407              	ADC_StartConvert:
 408              	.LFB6:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 15


 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 409              		.loc 1 392 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 414              		.loc 1 396 0
 415 0000 0122     		movs	r2, #1
 416 0002 014B     		ldr	r3, .L27
 417 0004 1A60     		str	r2, [r3]
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 418              		.loc 1 399 0
 419              		@ sp needed
 420 0006 7047     		bx	lr
 421              	.L28:
 422              		.align	2
 423              	.L27:
 424 0008 24003A40 		.word	1077542948
 425              		.cfi_endproc
 426              	.LFE6:
 427              		.size	ADC_StartConvert, .-ADC_StartConvert
 428              		.section	.text.ADC_StopConvert,"ax",%progbits
 429              		.align	2
 430              		.global	ADC_StopConvert
 431              		.code	16
 432              		.thumb_func
 433              		.type	ADC_StopConvert, %function
 434              	ADC_StopConvert:
 435              	.LFB7:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 16


 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 436              		.loc 1 417 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 441              		.loc 1 421 0
 442              		@ sp needed
 443 0000 7047     		bx	lr
 444              		.cfi_endproc
 445              	.LFE7:
 446              		.size	ADC_StopConvert, .-ADC_StopConvert
 447 0002 C046     		.section	.text.ADC_IsEndConversion,"ax",%progbits
 448              		.align	2
 449              		.global	ADC_IsEndConversion
 450              		.code	16
 451              		.thumb_func
 452              		.type	ADC_IsEndConversion, %function
 453              	ADC_IsEndConversion:
 454              	.LFB8:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 17


 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 455              		.loc 1 451 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              		@ link register save eliminated.
 460              	.LVL27:
 461 0000 0200     		movs	r2, r0
 462              	.LVL28:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 463              		.loc 1 454 0
 464 0002 8307     		lsls	r3, r0, #30
 465 0004 0CD0     		beq	.L34
 466              	.LVL29:
 467              	.L33:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 468              		.loc 1 458 0 discriminator 2
 469 0006 074B     		ldr	r3, .L35
 470 0008 1B68     		ldr	r3, [r3]
 471 000a 0120     		movs	r0, #1
 472 000c 1840     		ands	r0, r3
 473              	.LVL30:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 474              		.loc 1 459 0 discriminator 2
 475 000e 01D1     		bne	.L32
 476              		.loc 1 459 0 is_stmt 0 discriminator 1
 477 0010 9307     		lsls	r3, r2, #30
 478 0012 F8D4     		bmi	.L33
 479              	.L32:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 480              		.loc 1 461 0 is_stmt 1
 481 0014 0028     		cmp	r0, #0
 482 0016 04D0     		beq	.L31
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 483              		.loc 1 464 0
 484 0018 0122     		movs	r2, #1
 485              	.LVL31:
 486 001a 024B     		ldr	r3, .L35
 487 001c 1A60     		str	r2, [r3]
 488 001e 00E0     		b	.L31
 489              	.LVL32:
 490              	.L34:
 452:Generated_Source\PSoC4/ADC.c **** 
 491              		.loc 1 452 0
 492 0020 0020     		movs	r0, #0
 493              	.LVL33:
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 18


 494              	.L31:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 495              		.loc 1 486 0
 496              		@ sp needed
 497 0022 7047     		bx	lr
 498              	.L36:
 499              		.align	2
 500              	.L35:
 501 0024 10023A40 		.word	1077543440
 502              		.cfi_endproc
 503              	.LFE8:
 504              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 505              		.section	.text.ADC_GetResult16,"ax",%progbits
 506              		.align	2
 507              		.global	ADC_GetResult16
 508              		.code	16
 509              		.thumb_func
 510              		.type	ADC_GetResult16, %function
 511              	ADC_GetResult16:
 512              	.LFB9:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 19


 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 513              		.loc 1 505 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              	.LVL34:
 518 0000 10B5     		push	{r4, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 4, -8
 521              		.cfi_offset 14, -4
 522 0002 0400     		movs	r4, r0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 523              		.loc 1 509 0
 524 0004 0328     		cmp	r0, #3
 525 0006 02D9     		bls	.L38
 526              		.loc 1 509 0 is_stmt 0 discriminator 1
 527 0008 0020     		movs	r0, #0
 528              	.LVL35:
 529 000a FFF7FEFF 		bl	CyHalt
 530              	.LVL36:
 531              	.L38:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 532              		.loc 1 511 0 is_stmt 1
 533 000e 032C     		cmp	r4, #3
 534 0010 07D8     		bhi	.L40
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 535              		.loc 1 513 0
 536 0012 A400     		lsls	r4, r4, #2
 537              	.LVL37:
 538 0014 044B     		ldr	r3, .L41
 539 0016 9C46     		mov	ip, r3
 540 0018 6444     		add	r4, r4, ip
 541 001a 2068     		ldr	r0, [r4]
 542 001c 0004     		lsls	r0, r0, #16
 543 001e 000C     		lsrs	r0, r0, #16
 544              	.LVL38:
 545 0020 00E0     		b	.L39
 546              	.LVL39:
 547              	.L40:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 548              		.loc 1 521 0
 549 0022 0020     		movs	r0, #0
 550              	.LVL40:
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 20


 551              	.L39:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 552              		.loc 1 525 0
 553 0024 00B2     		sxth	r0, r0
 554              	.LVL41:
 526:Generated_Source\PSoC4/ADC.c **** }
 555              		.loc 1 526 0
 556              		@ sp needed
 557 0026 10BD     		pop	{r4, pc}
 558              	.L42:
 559              		.align	2
 560              	.L41:
 561 0028 80013A40 		.word	1077543296
 562              		.cfi_endproc
 563              	.LFE9:
 564              		.size	ADC_GetResult16, .-ADC_GetResult16
 565              		.section	.text.ADC_SetChanMask,"ax",%progbits
 566              		.align	2
 567              		.global	ADC_SetChanMask
 568              		.code	16
 569              		.thumb_func
 570              		.type	ADC_SetChanMask, %function
 571              	ADC_SetChanMask:
 572              	.LFB10:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 573              		.loc 1 550 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578              	.LVL42:
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 21


 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 579              		.loc 1 551 0
 580 0000 0F23     		movs	r3, #15
 581 0002 1840     		ands	r0, r3
 582              	.LVL43:
 583 0004 014B     		ldr	r3, .L44
 584 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 585              		.loc 1 552 0
 586              		@ sp needed
 587 0008 7047     		bx	lr
 588              	.L45:
 589 000a C046     		.align	2
 590              	.L44:
 591 000c 20003A40 		.word	1077542944
 592              		.cfi_endproc
 593              	.LFE10:
 594              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 595              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 596              		.align	2
 597              		.global	ADC_SetLowLimit
 598              		.code	16
 599              		.thumb_func
 600              		.type	ADC_SetLowLimit, %function
 601              	ADC_SetLowLimit:
 602              	.LFB11:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 22


 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 603              		.loc 1 594 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL44:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 609              		.loc 1 595 0
 610 0000 054A     		ldr	r2, .L47
 611 0002 1368     		ldr	r3, [r2]
 612 0004 1B0C     		lsrs	r3, r3, #16
 613 0006 1B04     		lsls	r3, r3, #16
 614 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 615              		.loc 1 596 0
 616 000a 1368     		ldr	r3, [r2]
 617 000c 0004     		lsls	r0, r0, #16
 618              	.LVL45:
 619 000e 000C     		lsrs	r0, r0, #16
 620 0010 1843     		orrs	r0, r3
 621 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 622              		.loc 1 597 0
 623              		@ sp needed
 624 0014 7047     		bx	lr
 625              	.L48:
 626 0016 C046     		.align	2
 627              	.L47:
 628 0018 18003A40 		.word	1077542936
 629              		.cfi_endproc
 630              	.LFE11:
 631              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 632              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 633              		.align	2
 634              		.global	ADC_SetHighLimit
 635              		.code	16
 636              		.thumb_func
 637              		.type	ADC_SetHighLimit, %function
 638              	ADC_SetHighLimit:
 639              	.LFB12:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 23


 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 640              		.loc 1 615 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645              	.LVL46:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 646              		.loc 1 616 0
 647 0000 044A     		ldr	r2, .L50
 648 0002 1368     		ldr	r3, [r2]
 649 0004 1B04     		lsls	r3, r3, #16
 650 0006 1B0C     		lsrs	r3, r3, #16
 651 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 652              		.loc 1 617 0
 653 000a 1368     		ldr	r3, [r2]
 654 000c 0004     		lsls	r0, r0, #16
 655              	.LVL47:
 656 000e 1843     		orrs	r0, r3
 657 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 658              		.loc 1 618 0
 659              		@ sp needed
 660 0012 7047     		bx	lr
 661              	.L51:
 662              		.align	2
 663              	.L50:
 664 0014 18003A40 		.word	1077542936
 665              		.cfi_endproc
 666              	.LFE12:
 667              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 668              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 669              		.align	2
 670              		.global	ADC_SetLimitMask
 671              		.code	16
 672              		.thumb_func
 673              		.type	ADC_SetLimitMask, %function
 674              	ADC_SetLimitMask:
 675              	.LFB13:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 24


 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 676              		.loc 1 639 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              		@ link register save eliminated.
 681              	.LVL48:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 682              		.loc 1 640 0
 683 0000 0F23     		movs	r3, #15
 684 0002 1840     		ands	r0, r3
 685              	.LVL49:
 686 0004 014B     		ldr	r3, .L53
 687 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 688              		.loc 1 641 0
 689              		@ sp needed
 690 0008 7047     		bx	lr
 691              	.L54:
 692 000a C046     		.align	2
 693              	.L53:
 694 000c 38023A40 		.word	1077543480
 695              		.cfi_endproc
 696              	.LFE13:
 697              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 698              		.section	.text.ADC_SetSatMask,"ax",%progbits
 699              		.align	2
 700              		.global	ADC_SetSatMask
 701              		.code	16
 702              		.thumb_func
 703              		.type	ADC_SetSatMask, %function
 704              	ADC_SetSatMask:
 705              	.LFB14:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 25


 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 706              		.loc 1 662 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711              	.LVL50:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 712              		.loc 1 663 0
 713 0000 0F23     		movs	r3, #15
 714 0002 1840     		ands	r0, r3
 715              	.LVL51:
 716 0004 014B     		ldr	r3, .L56
 717 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 718              		.loc 1 664 0
 719              		@ sp needed
 720 0008 7047     		bx	lr
 721              	.L57:
 722 000a C046     		.align	2
 723              	.L56:
 724 000c 28023A40 		.word	1077543464
 725              		.cfi_endproc
 726              	.LFE14:
 727              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 728              		.section	.text.ADC_SetOffset,"ax",%progbits
 729              		.align	2
 730              		.global	ADC_SetOffset
 731              		.code	16
 732              		.thumb_func
 733              		.type	ADC_SetOffset, %function
 734              	ADC_SetOffset:
 735              	.LFB15:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 26


 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 736              		.loc 1 690 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              	.LVL52:
 741 0000 70B5     		push	{r4, r5, r6, lr}
 742              		.cfi_def_cfa_offset 16
 743              		.cfi_offset 4, -16
 744              		.cfi_offset 5, -12
 745              		.cfi_offset 6, -8
 746              		.cfi_offset 14, -4
 747 0002 0400     		movs	r4, r0
 748 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 749              		.loc 1 692 0
 750 0006 0328     		cmp	r0, #3
 751 0008 02D9     		bls	.L59
 752              		.loc 1 692 0 is_stmt 0 discriminator 1
 753 000a 0020     		movs	r0, #0
 754              	.LVL53:
 755 000c FFF7FEFF 		bl	CyHalt
 756              	.LVL54:
 757              	.L59:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 758              		.loc 1 694 0 is_stmt 1
 759 0010 6400     		lsls	r4, r4, #1
 760              	.LVL55:
 761 0012 014B     		ldr	r3, .L60
 762 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 763              		.loc 1 695 0
 764              		@ sp needed
 765 0016 70BD     		pop	{r4, r5, r6, pc}
 766              	.L61:
 767              		.align	2
 768              	.L60:
 769 0018 00000000 		.word	ADC_offset
 770              		.cfi_endproc
 771              	.LFE15:
 772              		.size	ADC_SetOffset, .-ADC_SetOffset
 773              		.section	.text.ADC_SetGain,"ax",%progbits
 774              		.align	2
 775              		.global	ADC_SetGain
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 27


 776              		.code	16
 777              		.thumb_func
 778              		.type	ADC_SetGain, %function
 779              	ADC_SetGain:
 780              	.LFB16:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 781              		.loc 1 724 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              	.LVL56:
 786 0000 70B5     		push	{r4, r5, r6, lr}
 787              		.cfi_def_cfa_offset 16
 788              		.cfi_offset 4, -16
 789              		.cfi_offset 5, -12
 790              		.cfi_offset 6, -8
 791              		.cfi_offset 14, -4
 792 0002 0400     		movs	r4, r0
 793 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 794              		.loc 1 726 0
 795 0006 0328     		cmp	r0, #3
 796 0008 02D9     		bls	.L63
 797              		.loc 1 726 0 is_stmt 0 discriminator 1
 798 000a 0020     		movs	r0, #0
 799              	.LVL57:
 800 000c FFF7FEFF 		bl	CyHalt
 801              	.LVL58:
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 28


 802              	.L63:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 803              		.loc 1 728 0 is_stmt 1
 804 0010 A400     		lsls	r4, r4, #2
 805              	.LVL59:
 806 0012 014B     		ldr	r3, .L64
 807 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 808              		.loc 1 729 0
 809              		@ sp needed
 810              	.LVL60:
 811 0016 70BD     		pop	{r4, r5, r6, pc}
 812              	.L65:
 813              		.align	2
 814              	.L64:
 815 0018 00000000 		.word	ADC_countsPer10Volt
 816              		.cfi_endproc
 817              	.LFE16:
 818              		.size	ADC_SetGain, .-ADC_SetGain
 819              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 820              		.align	2
 821              		.global	ADC_CountsTo_mVolts
 822              		.code	16
 823              		.thumb_func
 824              		.type	ADC_CountsTo_mVolts, %function
 825              	ADC_CountsTo_mVolts:
 826              	.LFB17:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 827              		.loc 1 757 0
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 29


 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              	.LVL61:
 832 0000 70B5     		push	{r4, r5, r6, lr}
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 4, -16
 835              		.cfi_offset 5, -12
 836              		.cfi_offset 6, -8
 837              		.cfi_offset 14, -4
 838 0002 0400     		movs	r4, r0
 839 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 840              		.loc 1 761 0
 841 0006 0328     		cmp	r0, #3
 842 0008 02D9     		bls	.L67
 843              		.loc 1 761 0 is_stmt 0 discriminator 1
 844 000a 0020     		movs	r0, #0
 845              	.LVL62:
 846 000c FFF7FEFF 		bl	CyHalt
 847              	.LVL63:
 848              	.L67:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 849              		.loc 1 772 0 is_stmt 1
 850 0010 6300     		lsls	r3, r4, #1
 851 0012 0F4A     		ldr	r2, .L70
 852 0014 995A     		ldrh	r1, [r3, r2]
 853 0016 09B2     		sxth	r1, r1
 854 0018 691A     		subs	r1, r5, r1
 855 001a 09B2     		sxth	r1, r1
 856              	.LVL64:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 857              		.loc 1 774 0
 858 001c 0D48     		ldr	r0, .L70+4
 859 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 860              		.loc 1 775 0
 861 0020 0029     		cmp	r1, #0
 862 0022 06DD     		ble	.L68
 863              		.loc 1 775 0 is_stmt 0 discriminator 1
 864 0024 A300     		lsls	r3, r4, #2
 865 0026 0C4A     		ldr	r2, .L70+8
 866 0028 9A58     		ldr	r2, [r3, r2]
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 30


 867 002a D30F     		lsrs	r3, r2, #31
 868 002c 9A18     		adds	r2, r3, r2
 869 002e 5310     		asrs	r3, r2, #1
 870 0030 06E0     		b	.L69
 871              	.L68:
 872              		.loc 1 775 0 discriminator 2
 873 0032 A300     		lsls	r3, r4, #2
 874 0034 084A     		ldr	r2, .L70+8
 875 0036 9A58     		ldr	r2, [r3, r2]
 876 0038 D30F     		lsrs	r3, r2, #31
 877 003a 9A18     		adds	r2, r3, r2
 878 003c 5210     		asrs	r2, r2, #1
 879 003e 5342     		rsbs	r3, r2, #0
 880              	.L69:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 881              		.loc 1 774 0 is_stmt 1
 882 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 883              		.loc 1 776 0
 884 0042 A400     		lsls	r4, r4, #2
 885              	.LVL65:
 886 0044 044B     		ldr	r3, .L70+8
 887 0046 E158     		ldr	r1, [r4, r3]
 888              	.LVL66:
 889 0048 FFF7FEFF 		bl	__aeabi_idiv
 890              	.LVL67:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 891              		.loc 1 774 0
 892 004c 00B2     		sxth	r0, r0
 893              	.LVL68:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 894              		.loc 1 779 0
 895              		@ sp needed
 896 004e 70BD     		pop	{r4, r5, r6, pc}
 897              	.L71:
 898              		.align	2
 899              	.L70:
 900 0050 00000000 		.word	ADC_offset
 901 0054 10270000 		.word	10000
 902 0058 00000000 		.word	ADC_countsPer10Volt
 903              		.cfi_endproc
 904              	.LFE17:
 905              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 906              		.global	__aeabi_lmul
 907              		.global	__aeabi_ldivmod
 908              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 909              		.align	2
 910              		.global	ADC_CountsTo_uVolts
 911              		.code	16
 912              		.thumb_func
 913              		.type	ADC_CountsTo_uVolts, %function
 914              	ADC_CountsTo_uVolts:
 915              	.LFB18:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 31


 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 916              		.loc 1 811 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920              	.LVL69:
 921 0000 70B5     		push	{r4, r5, r6, lr}
 922              		.cfi_def_cfa_offset 16
 923              		.cfi_offset 4, -16
 924              		.cfi_offset 5, -12
 925              		.cfi_offset 6, -8
 926              		.cfi_offset 14, -4
 927 0002 0500     		movs	r5, r0
 928 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 929              		.loc 1 815 0
 930 0006 0328     		cmp	r0, #3
 931 0008 02D9     		bls	.L73
 932              		.loc 1 815 0 is_stmt 0 discriminator 1
 933 000a 0020     		movs	r0, #0
 934              	.LVL70:
 935 000c FFF7FEFF 		bl	CyHalt
 936              	.LVL71:
 937              	.L73:
 816:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 32


 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 938              		.loc 1 826 0 is_stmt 1
 939 0010 6A00     		lsls	r2, r5, #1
 940 0012 084B     		ldr	r3, .L74
 941 0014 D05A     		ldrh	r0, [r2, r3]
 942 0016 00B2     		sxth	r0, r0
 943 0018 201A     		subs	r0, r4, r0
 944 001a 00B2     		sxth	r0, r0
 945              	.LVL72:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 946              		.loc 1 828 0
 947 001c C117     		asrs	r1, r0, #31
 948 001e 064A     		ldr	r2, .L74+4
 949 0020 0023     		movs	r3, #0
 950 0022 FFF7FEFF 		bl	__aeabi_lmul
 951              	.LVL73:
 952 0026 AD00     		lsls	r5, r5, #2
 953              	.LVL74:
 954 0028 044B     		ldr	r3, .L74+8
 955 002a EA58     		ldr	r2, [r5, r3]
 956 002c D317     		asrs	r3, r2, #31
 957 002e FFF7FEFF 		bl	__aeabi_ldivmod
 958              	.LVL75:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 959              		.loc 1 831 0
 960              		@ sp needed
 961 0032 70BD     		pop	{r4, r5, r6, pc}
 962              	.L75:
 963              		.align	2
 964              	.L74:
 965 0034 00000000 		.word	ADC_offset
 966 0038 80969800 		.word	10000000
 967 003c 00000000 		.word	ADC_countsPer10Volt
 968              		.cfi_endproc
 969              	.LFE18:
 970              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 971              		.global	__aeabi_i2f
 972              		.global	__aeabi_fmul
 973              		.global	__aeabi_fdiv
 974              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 975              		.align	2
 976              		.global	ADC_CountsTo_Volts
 977              		.code	16
 978              		.thumb_func
 979              		.type	ADC_CountsTo_Volts, %function
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 33


 980              	ADC_CountsTo_Volts:
 981              	.LFB19:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 982              		.loc 1 856 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              	.LVL76:
 987 0000 70B5     		push	{r4, r5, r6, lr}
 988              		.cfi_def_cfa_offset 16
 989              		.cfi_offset 4, -16
 990              		.cfi_offset 5, -12
 991              		.cfi_offset 6, -8
 992              		.cfi_offset 14, -4
 993 0002 0400     		movs	r4, r0
 994 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 995              		.loc 1 860 0
 996 0006 0328     		cmp	r0, #3
 997 0008 02D9     		bls	.L77
 998              		.loc 1 860 0 is_stmt 0 discriminator 1
 999 000a 0020     		movs	r0, #0
 1000              	.LVL77:
 1001 000c FFF7FEFF 		bl	CyHalt
 1002              	.LVL78:
 1003              	.L77:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 34


 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1004              		.loc 1 871 0 is_stmt 1
 1005 0010 6200     		lsls	r2, r4, #1
 1006 0012 0A4B     		ldr	r3, .L78
 1007 0014 D05A     		ldrh	r0, [r2, r3]
 1008 0016 00B2     		sxth	r0, r0
 1009 0018 281A     		subs	r0, r5, r0
 1010 001a 00B2     		sxth	r0, r0
 1011              	.LVL79:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1012              		.loc 1 873 0
 1013 001c FFF7FEFF 		bl	__aeabi_i2f
 1014              	.LVL80:
 1015 0020 0749     		ldr	r1, .L78+4
 1016 0022 FFF7FEFF 		bl	__aeabi_fmul
 1017              	.LVL81:
 1018 0026 051C     		adds	r5, r0, #0
 1019 0028 A400     		lsls	r4, r4, #2
 1020              	.LVL82:
 1021 002a 064B     		ldr	r3, .L78+8
 1022 002c E058     		ldr	r0, [r4, r3]
 1023 002e FFF7FEFF 		bl	__aeabi_i2f
 1024              	.LVL83:
 1025 0032 011C     		adds	r1, r0, #0
 1026 0034 281C     		adds	r0, r5, #0
 1027 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1028              	.LVL84:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 1029              		.loc 1 876 0
 1030              		@ sp needed
 1031 003a 70BD     		pop	{r4, r5, r6, pc}
 1032              	.L79:
 1033              		.align	2
 1034              	.L78:
 1035 003c 00000000 		.word	ADC_offset
 1036 0040 00002041 		.word	1092616192
 1037 0044 00000000 		.word	ADC_countsPer10Volt
 1038              		.cfi_endproc
 1039              	.LFE19:
 1040              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1041              		.comm	ADC_countsPer10Volt,16,4
 1042              		.comm	ADC_offset,8,4
 1043              		.global	ADC_initVar
 1044              		.section	.rodata
 1045              		.align	2
 1046              		.set	.LANCHOR0,. + 0
 1047              		.type	ADC_channelsConfig, %object
 1048              		.size	ADC_channelsConfig, 16
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 35


 1049              	ADC_channelsConfig:
 1050 0000 00000000 		.space	16
 1050      00000000 
 1050      00000000 
 1050      00000000 
 1051              		.type	ADC_InputsPlacement.4911, %object
 1052              		.size	ADC_InputsPlacement.4911, 4
 1053              	ADC_InputsPlacement.4911:
 1054 0010 12       		.byte	18
 1055 0011 13       		.byte	19
 1056 0012 04       		.byte	4
 1057 0013 05       		.byte	5
 1058              		.bss
 1059              		.set	.LANCHOR1,. + 0
 1060              		.type	ADC_initVar, %object
 1061              		.size	ADC_initVar, 1
 1062              	ADC_initVar:
 1063 0000 00       		.space	1
 1064              		.text
 1065              	.Letext0:
 1066              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1067              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1068              		.section	.debug_info,"",%progbits
 1069              	.Ldebug_info0:
 1070 0000 A1050000 		.4byte	0x5a1
 1071 0004 0400     		.2byte	0x4
 1072 0006 00000000 		.4byte	.Ldebug_abbrev0
 1073 000a 04       		.byte	0x4
 1074 000b 01       		.uleb128 0x1
 1075 000c 32000000 		.4byte	.LASF64
 1076 0010 0C       		.byte	0xc
 1077 0011 9C020000 		.4byte	.LASF65
 1078 0015 4F030000 		.4byte	.LASF66
 1079 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1080 001d 00000000 		.4byte	0
 1081 0021 00000000 		.4byte	.Ldebug_line0
 1082 0025 02       		.uleb128 0x2
 1083 0026 01       		.byte	0x1
 1084 0027 06       		.byte	0x6
 1085 0028 0A010000 		.4byte	.LASF0
 1086 002c 02       		.uleb128 0x2
 1087 002d 01       		.byte	0x1
 1088 002e 08       		.byte	0x8
 1089 002f 00030000 		.4byte	.LASF1
 1090 0033 02       		.uleb128 0x2
 1091 0034 02       		.byte	0x2
 1092 0035 05       		.byte	0x5
 1093 0036 19030000 		.4byte	.LASF2
 1094 003a 02       		.uleb128 0x2
 1095 003b 02       		.byte	0x2
 1096 003c 07       		.byte	0x7
 1097 003d EB010000 		.4byte	.LASF3
 1098 0041 02       		.uleb128 0x2
 1099 0042 04       		.byte	0x4
 1100 0043 05       		.byte	0x5
 1101 0044 2D010000 		.4byte	.LASF4
 1102 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 36


 1103 0049 04       		.byte	0x4
 1104 004a 07       		.byte	0x7
 1105 004b BA010000 		.4byte	.LASF5
 1106 004f 02       		.uleb128 0x2
 1107 0050 08       		.byte	0x8
 1108 0051 05       		.byte	0x5
 1109 0052 FC000000 		.4byte	.LASF6
 1110 0056 02       		.uleb128 0x2
 1111 0057 08       		.byte	0x8
 1112 0058 07       		.byte	0x7
 1113 0059 C0000000 		.4byte	.LASF7
 1114 005d 03       		.uleb128 0x3
 1115 005e 04       		.byte	0x4
 1116 005f 05       		.byte	0x5
 1117 0060 696E7400 		.ascii	"int\000"
 1118 0064 02       		.uleb128 0x2
 1119 0065 04       		.byte	0x4
 1120 0066 07       		.byte	0x7
 1121 0067 A6010000 		.4byte	.LASF8
 1122 006b 04       		.uleb128 0x4
 1123 006c 5E010000 		.4byte	.LASF9
 1124 0070 02       		.byte	0x2
 1125 0071 E401     		.2byte	0x1e4
 1126 0073 2C000000 		.4byte	0x2c
 1127 0077 04       		.uleb128 0x4
 1128 0078 00000000 		.4byte	.LASF10
 1129 007c 02       		.byte	0x2
 1130 007d E501     		.2byte	0x1e5
 1131 007f 3A000000 		.4byte	0x3a
 1132 0083 04       		.uleb128 0x4
 1133 0084 75010000 		.4byte	.LASF11
 1134 0088 02       		.byte	0x2
 1135 0089 E601     		.2byte	0x1e6
 1136 008b 48000000 		.4byte	0x48
 1137 008f 04       		.uleb128 0x4
 1138 0090 B8030000 		.4byte	.LASF12
 1139 0094 02       		.byte	0x2
 1140 0095 E801     		.2byte	0x1e8
 1141 0097 33000000 		.4byte	0x33
 1142 009b 04       		.uleb128 0x4
 1143 009c 1D010000 		.4byte	.LASF13
 1144 00a0 02       		.byte	0x2
 1145 00a1 E901     		.2byte	0x1e9
 1146 00a3 41000000 		.4byte	0x41
 1147 00a7 04       		.uleb128 0x4
 1148 00a8 2A020000 		.4byte	.LASF14
 1149 00ac 02       		.byte	0x2
 1150 00ad EA01     		.2byte	0x1ea
 1151 00af B3000000 		.4byte	0xb3
 1152 00b3 02       		.uleb128 0x2
 1153 00b4 04       		.byte	0x4
 1154 00b5 04       		.byte	0x4
 1155 00b6 C5020000 		.4byte	.LASF15
 1156 00ba 02       		.uleb128 0x2
 1157 00bb 08       		.byte	0x8
 1158 00bc 04       		.byte	0x4
 1159 00bd 6E010000 		.4byte	.LASF16
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 37


 1160 00c1 04       		.uleb128 0x4
 1161 00c2 75020000 		.4byte	.LASF17
 1162 00c6 02       		.byte	0x2
 1163 00c7 EF01     		.2byte	0x1ef
 1164 00c9 4F000000 		.4byte	0x4f
 1165 00cd 02       		.uleb128 0x2
 1166 00ce 01       		.byte	0x1
 1167 00cf 08       		.byte	0x8
 1168 00d0 37030000 		.4byte	.LASF18
 1169 00d4 04       		.uleb128 0x4
 1170 00d5 24020000 		.4byte	.LASF19
 1171 00d9 02       		.byte	0x2
 1172 00da 9002     		.2byte	0x290
 1173 00dc E0000000 		.4byte	0xe0
 1174 00e0 05       		.uleb128 0x5
 1175 00e1 83000000 		.4byte	0x83
 1176 00e5 02       		.uleb128 0x2
 1177 00e6 08       		.byte	0x8
 1178 00e7 04       		.byte	0x4
 1179 00e8 44020000 		.4byte	.LASF20
 1180 00ec 02       		.uleb128 0x2
 1181 00ed 04       		.byte	0x4
 1182 00ee 07       		.byte	0x7
 1183 00ef 32020000 		.4byte	.LASF21
 1184 00f3 06       		.uleb128 0x6
 1185 00f4 29000000 		.4byte	.LASF26
 1186 00f8 01       		.byte	0x1
 1187 00f9 5E       		.byte	0x5e
 1188 00fa 00000000 		.4byte	.LFB3
 1189 00fe 88010000 		.4byte	.LFE3-.LFB3
 1190 0102 01       		.uleb128 0x1
 1191 0103 9C       		.byte	0x9c
 1192 0104 6E010000 		.4byte	0x16e
 1193 0108 07       		.uleb128 0x7
 1194 0109 2C030000 		.4byte	.LASF22
 1195 010d 01       		.byte	0x1
 1196 010e 60       		.byte	0x60
 1197 010f 83000000 		.4byte	0x83
 1198 0113 00000000 		.4byte	.LLST0
 1199 0117 07       		.uleb128 0x7
 1200 0118 E1010000 		.4byte	.LASF23
 1201 011c 01       		.byte	0x1
 1202 011d 61       		.byte	0x61
 1203 011e 83000000 		.4byte	0x83
 1204 0122 1F000000 		.4byte	.LLST1
 1205 0126 07       		.uleb128 0x7
 1206 0127 0F000000 		.4byte	.LASF24
 1207 012b 01       		.byte	0x1
 1208 012c 62       		.byte	0x62
 1209 012d 9B000000 		.4byte	0x9b
 1210 0131 73010000 		.4byte	.LLST2
 1211 0135 08       		.uleb128 0x8
 1212 0136 D7000000 		.4byte	.LASF25
 1213 013a 01       		.byte	0x1
 1214 013b 65       		.byte	0x65
 1215 013c 83010000 		.4byte	0x183
 1216 0140 05       		.uleb128 0x5
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 38


 1217 0141 03       		.byte	0x3
 1218 0142 10000000 		.4byte	ADC_InputsPlacement.4911
 1219 0146 09       		.uleb128 0x9
 1220 0147 0A000000 		.4byte	.LVL0
 1221 014b 78050000 		.4byte	0x578
 1222 014f 5E010000 		.4byte	0x15e
 1223 0153 0A       		.uleb128 0xa
 1224 0154 01       		.uleb128 0x1
 1225 0155 50       		.byte	0x50
 1226 0156 01       		.uleb128 0x1
 1227 0157 3F       		.byte	0x3f
 1228 0158 0A       		.uleb128 0xa
 1229 0159 01       		.uleb128 0x1
 1230 015a 51       		.byte	0x51
 1231 015b 01       		.uleb128 0x1
 1232 015c 30       		.byte	0x30
 1233 015d 00       		.byte	0
 1234 015e 0B       		.uleb128 0xb
 1235 015f 12000000 		.4byte	.LVL1
 1236 0163 83050000 		.4byte	0x583
 1237 0167 0A       		.uleb128 0xa
 1238 0168 01       		.uleb128 0x1
 1239 0169 50       		.byte	0x50
 1240 016a 01       		.uleb128 0x1
 1241 016b 3F       		.byte	0x3f
 1242 016c 00       		.byte	0
 1243 016d 00       		.byte	0
 1244 016e 0C       		.uleb128 0xc
 1245 016f 7E010000 		.4byte	0x17e
 1246 0173 7E010000 		.4byte	0x17e
 1247 0177 0D       		.uleb128 0xd
 1248 0178 EC000000 		.4byte	0xec
 1249 017c 03       		.byte	0x3
 1250 017d 00       		.byte	0
 1251 017e 0E       		.uleb128 0xe
 1252 017f 6B000000 		.4byte	0x6b
 1253 0183 0E       		.uleb128 0xe
 1254 0184 6E010000 		.4byte	0x16e
 1255 0188 0F       		.uleb128 0xf
 1256 0189 AD030000 		.4byte	.LASF27
 1257 018d 01       		.byte	0x1
 1258 018e 4A01     		.2byte	0x14a
 1259 0190 00000000 		.4byte	.LFB4
 1260 0194 30000000 		.4byte	.LFE4-.LFB4
 1261 0198 01       		.uleb128 0x1
 1262 0199 9C       		.byte	0x9c
 1263 019a AE010000 		.4byte	0x1ae
 1264 019e 0B       		.uleb128 0xb
 1265 019f 24000000 		.4byte	.LVL24
 1266 01a3 8E050000 		.4byte	0x58e
 1267 01a7 0A       		.uleb128 0xa
 1268 01a8 01       		.uleb128 0x1
 1269 01a9 50       		.byte	0x50
 1270 01aa 01       		.uleb128 0x1
 1271 01ab 3A       		.byte	0x3a
 1272 01ac 00       		.byte	0
 1273 01ad 00       		.byte	0
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 39


 1274 01ae 10       		.uleb128 0x10
 1275 01af 23010000 		.4byte	.LASF28
 1276 01b3 01       		.byte	0x1
 1277 01b4 3F       		.byte	0x3f
 1278 01b5 00000000 		.4byte	.LFB2
 1279 01b9 20000000 		.4byte	.LFE2-.LFB2
 1280 01bd 01       		.uleb128 0x1
 1281 01be 9C       		.byte	0x9c
 1282 01bf D6010000 		.4byte	0x1d6
 1283 01c3 11       		.uleb128 0x11
 1284 01c4 0E000000 		.4byte	.LVL25
 1285 01c8 F3000000 		.4byte	0xf3
 1286 01cc 11       		.uleb128 0x11
 1287 01cd 18000000 		.4byte	.LVL26
 1288 01d1 88010000 		.4byte	0x188
 1289 01d5 00       		.byte	0
 1290 01d6 12       		.uleb128 0x12
 1291 01d7 23030000 		.4byte	.LASF29
 1292 01db 01       		.byte	0x1
 1293 01dc 6D01     		.2byte	0x16d
 1294 01de 00000000 		.4byte	.LFB5
 1295 01e2 10000000 		.4byte	.LFE5-.LFB5
 1296 01e6 01       		.uleb128 0x1
 1297 01e7 9C       		.byte	0x9c
 1298 01e8 12       		.uleb128 0x12
 1299 01e9 EB000000 		.4byte	.LASF30
 1300 01ed 01       		.byte	0x1
 1301 01ee 8701     		.2byte	0x187
 1302 01f0 00000000 		.4byte	.LFB6
 1303 01f4 0C000000 		.4byte	.LFE6-.LFB6
 1304 01f8 01       		.uleb128 0x1
 1305 01f9 9C       		.byte	0x9c
 1306 01fa 12       		.uleb128 0x12
 1307 01fb 0D020000 		.4byte	.LASF31
 1308 01ff 01       		.byte	0x1
 1309 0200 A001     		.2byte	0x1a0
 1310 0202 00000000 		.4byte	.LFB7
 1311 0206 02000000 		.4byte	.LFE7-.LFB7
 1312 020a 01       		.uleb128 0x1
 1313 020b 9C       		.byte	0x9c
 1314 020c 13       		.uleb128 0x13
 1315 020d 61020000 		.4byte	.LASF33
 1316 0211 01       		.byte	0x1
 1317 0212 C201     		.2byte	0x1c2
 1318 0214 83000000 		.4byte	0x83
 1319 0218 00000000 		.4byte	.LFB8
 1320 021c 28000000 		.4byte	.LFE8-.LFB8
 1321 0220 01       		.uleb128 0x1
 1322 0221 9C       		.byte	0x9c
 1323 0222 47020000 		.4byte	0x247
 1324 0226 14       		.uleb128 0x14
 1325 0227 8D010000 		.4byte	.LASF35
 1326 022b 01       		.byte	0x1
 1327 022c C201     		.2byte	0x1c2
 1328 022e 83000000 		.4byte	0x83
 1329 0232 86010000 		.4byte	.LLST3
 1330 0236 15       		.uleb128 0x15
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 40


 1331 0237 16010000 		.4byte	.LASF32
 1332 023b 01       		.byte	0x1
 1333 023c C401     		.2byte	0x1c4
 1334 023e 83000000 		.4byte	0x83
 1335 0242 CB010000 		.4byte	.LLST4
 1336 0246 00       		.byte	0
 1337 0247 13       		.uleb128 0x13
 1338 0248 D3030000 		.4byte	.LASF34
 1339 024c 01       		.byte	0x1
 1340 024d F801     		.2byte	0x1f8
 1341 024f 8F000000 		.4byte	0x8f
 1342 0253 00000000 		.4byte	.LFB9
 1343 0257 2C000000 		.4byte	.LFE9-.LFB9
 1344 025b 01       		.uleb128 0x1
 1345 025c 9C       		.byte	0x9c
 1346 025d 91020000 		.4byte	0x291
 1347 0261 14       		.uleb128 0x14
 1348 0262 32030000 		.4byte	.LASF36
 1349 0266 01       		.byte	0x1
 1350 0267 F801     		.2byte	0x1f8
 1351 0269 83000000 		.4byte	0x83
 1352 026d 01020000 		.4byte	.LLST5
 1353 0271 15       		.uleb128 0x15
 1354 0272 CC030000 		.4byte	.LASF37
 1355 0276 01       		.byte	0x1
 1356 0277 FA01     		.2byte	0x1fa
 1357 0279 83000000 		.4byte	0x83
 1358 027d 46020000 		.4byte	.LLST6
 1359 0281 0B       		.uleb128 0xb
 1360 0282 0E000000 		.4byte	.LVL36
 1361 0286 99050000 		.4byte	0x599
 1362 028a 0A       		.uleb128 0xa
 1363 028b 01       		.uleb128 0x1
 1364 028c 50       		.byte	0x50
 1365 028d 01       		.uleb128 0x1
 1366 028e 30       		.byte	0x30
 1367 028f 00       		.byte	0
 1368 0290 00       		.byte	0
 1369 0291 0F       		.uleb128 0xf
 1370 0292 8C020000 		.4byte	.LASF38
 1371 0296 01       		.byte	0x1
 1372 0297 2502     		.2byte	0x225
 1373 0299 00000000 		.4byte	.LFB10
 1374 029d 10000000 		.4byte	.LFE10-.LFB10
 1375 02a1 01       		.uleb128 0x1
 1376 02a2 9C       		.byte	0x9c
 1377 02a3 B8020000 		.4byte	0x2b8
 1378 02a7 14       		.uleb128 0x14
 1379 02a8 7C010000 		.4byte	.LASF39
 1380 02ac 01       		.byte	0x1
 1381 02ad 2502     		.2byte	0x225
 1382 02af 83000000 		.4byte	0x83
 1383 02b3 64020000 		.4byte	.LLST7
 1384 02b7 00       		.byte	0
 1385 02b8 0F       		.uleb128 0xf
 1386 02b9 E9020000 		.4byte	.LASF40
 1387 02bd 01       		.byte	0x1
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 41


 1388 02be 5102     		.2byte	0x251
 1389 02c0 00000000 		.4byte	.LFB11
 1390 02c4 1C000000 		.4byte	.LFE11-.LFB11
 1391 02c8 01       		.uleb128 0x1
 1392 02c9 9C       		.byte	0x9c
 1393 02ca DF020000 		.4byte	0x2df
 1394 02ce 14       		.uleb128 0x14
 1395 02cf 3B020000 		.4byte	.LASF41
 1396 02d3 01       		.byte	0x1
 1397 02d4 5102     		.2byte	0x251
 1398 02d6 83000000 		.4byte	0x83
 1399 02da 85020000 		.4byte	.LLST8
 1400 02de 00       		.byte	0
 1401 02df 0F       		.uleb128 0xf
 1402 02e0 50020000 		.4byte	.LASF42
 1403 02e4 01       		.byte	0x1
 1404 02e5 6602     		.2byte	0x266
 1405 02e7 00000000 		.4byte	.LFB12
 1406 02eb 18000000 		.4byte	.LFE12-.LFB12
 1407 02ef 01       		.uleb128 0x1
 1408 02f0 9C       		.byte	0x9c
 1409 02f1 06030000 		.4byte	0x306
 1410 02f5 14       		.uleb128 0x14
 1411 02f6 CB020000 		.4byte	.LASF43
 1412 02fa 01       		.byte	0x1
 1413 02fb 6602     		.2byte	0x266
 1414 02fd 83000000 		.4byte	0x83
 1415 0301 A6020000 		.4byte	.LLST9
 1416 0305 00       		.byte	0
 1417 0306 0F       		.uleb128 0xf
 1418 0307 95010000 		.4byte	.LASF44
 1419 030b 01       		.byte	0x1
 1420 030c 7E02     		.2byte	0x27e
 1421 030e 00000000 		.4byte	.LFB13
 1422 0312 10000000 		.4byte	.LFE13-.LFB13
 1423 0316 01       		.uleb128 0x1
 1424 0317 9C       		.byte	0x9c
 1425 0318 2D030000 		.4byte	0x32d
 1426 031c 14       		.uleb128 0x14
 1427 031d 7C010000 		.4byte	.LASF39
 1428 0321 01       		.byte	0x1
 1429 0322 7E02     		.2byte	0x27e
 1430 0324 83000000 		.4byte	0x83
 1431 0328 C7020000 		.4byte	.LLST10
 1432 032c 00       		.byte	0
 1433 032d 0F       		.uleb128 0xf
 1434 032e CC010000 		.4byte	.LASF45
 1435 0332 01       		.byte	0x1
 1436 0333 9502     		.2byte	0x295
 1437 0335 00000000 		.4byte	.LFB14
 1438 0339 10000000 		.4byte	.LFE14-.LFB14
 1439 033d 01       		.uleb128 0x1
 1440 033e 9C       		.byte	0x9c
 1441 033f 54030000 		.4byte	0x354
 1442 0343 14       		.uleb128 0x14
 1443 0344 7C010000 		.4byte	.LASF39
 1444 0348 01       		.byte	0x1
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 42


 1445 0349 9502     		.2byte	0x295
 1446 034b 83000000 		.4byte	0x83
 1447 034f E8020000 		.4byte	.LLST11
 1448 0353 00       		.byte	0
 1449 0354 0F       		.uleb128 0xf
 1450 0355 BE030000 		.4byte	.LASF46
 1451 0359 01       		.byte	0x1
 1452 035a B102     		.2byte	0x2b1
 1453 035c 00000000 		.4byte	.LFB15
 1454 0360 1C000000 		.4byte	.LFE15-.LFB15
 1455 0364 01       		.uleb128 0x1
 1456 0365 9C       		.byte	0x9c
 1457 0366 9A030000 		.4byte	0x39a
 1458 036a 14       		.uleb128 0x14
 1459 036b 32030000 		.4byte	.LASF36
 1460 036f 01       		.byte	0x1
 1461 0370 B102     		.2byte	0x2b1
 1462 0372 83000000 		.4byte	0x83
 1463 0376 09030000 		.4byte	.LLST12
 1464 037a 14       		.uleb128 0x14
 1465 037b 9C030000 		.4byte	.LASF47
 1466 037f 01       		.byte	0x1
 1467 0380 B102     		.2byte	0x2b1
 1468 0382 8F000000 		.4byte	0x8f
 1469 0386 35030000 		.4byte	.LLST13
 1470 038a 0B       		.uleb128 0xb
 1471 038b 10000000 		.4byte	.LVL54
 1472 038f 99050000 		.4byte	0x599
 1473 0393 0A       		.uleb128 0xa
 1474 0394 01       		.uleb128 0x1
 1475 0395 50       		.byte	0x50
 1476 0396 01       		.uleb128 0x1
 1477 0397 30       		.byte	0x30
 1478 0398 00       		.byte	0
 1479 0399 00       		.byte	0
 1480 039a 0F       		.uleb128 0xf
 1481 039b B9020000 		.4byte	.LASF48
 1482 039f 01       		.byte	0x1
 1483 03a0 D302     		.2byte	0x2d3
 1484 03a2 00000000 		.4byte	.LFB16
 1485 03a6 1C000000 		.4byte	.LFE16-.LFB16
 1486 03aa 01       		.uleb128 0x1
 1487 03ab 9C       		.byte	0x9c
 1488 03ac E0030000 		.4byte	0x3e0
 1489 03b0 14       		.uleb128 0x14
 1490 03b1 32030000 		.4byte	.LASF36
 1491 03b5 01       		.byte	0x1
 1492 03b6 D302     		.2byte	0x2d3
 1493 03b8 83000000 		.4byte	0x83
 1494 03bc 56030000 		.4byte	.LLST14
 1495 03c0 14       		.uleb128 0x14
 1496 03c1 07000000 		.4byte	.LASF49
 1497 03c5 01       		.byte	0x1
 1498 03c6 D302     		.2byte	0x2d3
 1499 03c8 9B000000 		.4byte	0x9b
 1500 03cc 82030000 		.4byte	.LLST15
 1501 03d0 0B       		.uleb128 0xb
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 43


 1502 03d1 10000000 		.4byte	.LVL58
 1503 03d5 99050000 		.4byte	0x599
 1504 03d9 0A       		.uleb128 0xa
 1505 03da 01       		.uleb128 0x1
 1506 03db 50       		.byte	0x50
 1507 03dc 01       		.uleb128 0x1
 1508 03dd 30       		.byte	0x30
 1509 03de 00       		.byte	0
 1510 03df 00       		.byte	0
 1511 03e0 16       		.uleb128 0x16
 1512 03e1 D5020000 		.4byte	.LASF50
 1513 03e5 01       		.byte	0x1
 1514 03e6 F402     		.2byte	0x2f4
 1515 03e8 8F000000 		.4byte	0x8f
 1516 03ec 00000000 		.4byte	.LFB17
 1517 03f0 5C000000 		.4byte	.LFE17-.LFB17
 1518 03f4 01       		.uleb128 0x1
 1519 03f5 9C       		.byte	0x9c
 1520 03f6 38040000 		.4byte	0x438
 1521 03fa 14       		.uleb128 0x14
 1522 03fb 32030000 		.4byte	.LASF36
 1523 03ff 01       		.byte	0x1
 1524 0400 F402     		.2byte	0x2f4
 1525 0402 83000000 		.4byte	0x83
 1526 0406 B2030000 		.4byte	.LLST16
 1527 040a 14       		.uleb128 0x14
 1528 040b A3030000 		.4byte	.LASF51
 1529 040f 01       		.byte	0x1
 1530 0410 F402     		.2byte	0x2f4
 1531 0412 8F000000 		.4byte	0x8f
 1532 0416 DE030000 		.4byte	.LLST17
 1533 041a 17       		.uleb128 0x17
 1534 041b 1D020000 		.4byte	.LASF52
 1535 041f 01       		.byte	0x1
 1536 0420 F602     		.2byte	0x2f6
 1537 0422 8F000000 		.4byte	0x8f
 1538 0426 01       		.uleb128 0x1
 1539 0427 50       		.byte	0x50
 1540 0428 0B       		.uleb128 0xb
 1541 0429 10000000 		.4byte	.LVL63
 1542 042d 99050000 		.4byte	0x599
 1543 0431 0A       		.uleb128 0xa
 1544 0432 01       		.uleb128 0x1
 1545 0433 50       		.byte	0x50
 1546 0434 01       		.uleb128 0x1
 1547 0435 30       		.byte	0x30
 1548 0436 00       		.byte	0
 1549 0437 00       		.byte	0
 1550 0438 16       		.uleb128 0x16
 1551 0439 36010000 		.4byte	.LASF53
 1552 043d 01       		.byte	0x1
 1553 043e 2A03     		.2byte	0x32a
 1554 0440 9B000000 		.4byte	0x9b
 1555 0444 00000000 		.4byte	.LFB18
 1556 0448 40000000 		.4byte	.LFE18-.LFB18
 1557 044c 01       		.uleb128 0x1
 1558 044d 9C       		.byte	0x9c
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 44


 1559 044e 8E040000 		.4byte	0x48e
 1560 0452 14       		.uleb128 0x14
 1561 0453 32030000 		.4byte	.LASF36
 1562 0457 01       		.byte	0x1
 1563 0458 2A03     		.2byte	0x32a
 1564 045a 83000000 		.4byte	0x83
 1565 045e 0A040000 		.4byte	.LLST18
 1566 0462 14       		.uleb128 0x14
 1567 0463 A3030000 		.4byte	.LASF51
 1568 0467 01       		.byte	0x1
 1569 0468 2A03     		.2byte	0x32a
 1570 046a 8F000000 		.4byte	0x8f
 1571 046e 36040000 		.4byte	.LLST19
 1572 0472 18       		.uleb128 0x18
 1573 0473 B3010000 		.4byte	.LASF67
 1574 0477 01       		.byte	0x1
 1575 0478 2C03     		.2byte	0x32c
 1576 047a C1000000 		.4byte	0xc1
 1577 047e 0B       		.uleb128 0xb
 1578 047f 10000000 		.4byte	.LVL71
 1579 0483 99050000 		.4byte	0x599
 1580 0487 0A       		.uleb128 0xa
 1581 0488 01       		.uleb128 0x1
 1582 0489 50       		.byte	0x50
 1583 048a 01       		.uleb128 0x1
 1584 048b 30       		.byte	0x30
 1585 048c 00       		.byte	0
 1586 048d 00       		.byte	0
 1587 048e 16       		.uleb128 0x16
 1588 048f 16000000 		.4byte	.LASF54
 1589 0493 01       		.byte	0x1
 1590 0494 5703     		.2byte	0x357
 1591 0496 A7000000 		.4byte	0xa7
 1592 049a 00000000 		.4byte	.LFB19
 1593 049e 48000000 		.4byte	.LFE19-.LFB19
 1594 04a2 01       		.uleb128 0x1
 1595 04a3 9C       		.byte	0x9c
 1596 04a4 E6040000 		.4byte	0x4e6
 1597 04a8 14       		.uleb128 0x14
 1598 04a9 32030000 		.4byte	.LASF36
 1599 04ad 01       		.byte	0x1
 1600 04ae 5703     		.2byte	0x357
 1601 04b0 83000000 		.4byte	0x83
 1602 04b4 62040000 		.4byte	.LLST20
 1603 04b8 14       		.uleb128 0x14
 1604 04b9 A3030000 		.4byte	.LASF51
 1605 04bd 01       		.byte	0x1
 1606 04be 5703     		.2byte	0x357
 1607 04c0 8F000000 		.4byte	0x8f
 1608 04c4 8E040000 		.4byte	.LLST21
 1609 04c8 17       		.uleb128 0x17
 1610 04c9 DB010000 		.4byte	.LASF55
 1611 04cd 01       		.byte	0x1
 1612 04ce 5903     		.2byte	0x359
 1613 04d0 A7000000 		.4byte	0xa7
 1614 04d4 01       		.uleb128 0x1
 1615 04d5 50       		.byte	0x50
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 45


 1616 04d6 0B       		.uleb128 0xb
 1617 04d7 10000000 		.4byte	.LVL78
 1618 04db 99050000 		.4byte	0x599
 1619 04df 0A       		.uleb128 0xa
 1620 04e0 01       		.uleb128 0x1
 1621 04e1 50       		.byte	0x50
 1622 04e2 01       		.uleb128 0x1
 1623 04e3 30       		.byte	0x30
 1624 04e4 00       		.byte	0
 1625 04e5 00       		.byte	0
 1626 04e6 0C       		.uleb128 0xc
 1627 04e7 F6040000 		.4byte	0x4f6
 1628 04eb F6040000 		.4byte	0x4f6
 1629 04ef 0D       		.uleb128 0xd
 1630 04f0 EC000000 		.4byte	0xec
 1631 04f4 03       		.byte	0x3
 1632 04f5 00       		.byte	0
 1633 04f6 0E       		.uleb128 0xe
 1634 04f7 83000000 		.4byte	0x83
 1635 04fb 08       		.uleb128 0x8
 1636 04fc 3C030000 		.4byte	.LASF56
 1637 0500 01       		.byte	0x1
 1638 0501 21       		.byte	0x21
 1639 0502 0C050000 		.4byte	0x50c
 1640 0506 05       		.uleb128 0x5
 1641 0507 03       		.byte	0x3
 1642 0508 00000000 		.4byte	ADC_channelsConfig
 1643 050c 0E       		.uleb128 0xe
 1644 050d E6040000 		.4byte	0x4e6
 1645 0511 19       		.uleb128 0x19
 1646 0512 81010000 		.4byte	.LASF57
 1647 0516 01       		.byte	0x1
 1648 0517 18       		.byte	0x18
 1649 0518 6B000000 		.4byte	0x6b
 1650 051c 05       		.uleb128 0x5
 1651 051d 03       		.byte	0x3
 1652 051e 00000000 		.4byte	ADC_initVar
 1653 0522 0C       		.uleb128 0xc
 1654 0523 32050000 		.4byte	0x532
 1655 0527 32050000 		.4byte	0x532
 1656 052b 0D       		.uleb128 0xd
 1657 052c EC000000 		.4byte	0xec
 1658 0530 03       		.byte	0x3
 1659 0531 00       		.byte	0
 1660 0532 05       		.uleb128 0x5
 1661 0533 8F000000 		.4byte	0x8f
 1662 0537 19       		.uleb128 0x19
 1663 0538 0E030000 		.4byte	.LASF58
 1664 053c 01       		.byte	0x1
 1665 053d 19       		.byte	0x19
 1666 053e 48050000 		.4byte	0x548
 1667 0542 05       		.uleb128 0x5
 1668 0543 03       		.byte	0x3
 1669 0544 00000000 		.4byte	ADC_offset
 1670 0548 05       		.uleb128 0x5
 1671 0549 22050000 		.4byte	0x522
 1672 054d 0C       		.uleb128 0xc
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 46


 1673 054e 5D050000 		.4byte	0x55d
 1674 0552 5D050000 		.4byte	0x55d
 1675 0556 0D       		.uleb128 0xd
 1676 0557 EC000000 		.4byte	0xec
 1677 055b 03       		.byte	0x3
 1678 055c 00       		.byte	0
 1679 055d 05       		.uleb128 0x5
 1680 055e 9B000000 		.4byte	0x9b
 1681 0562 19       		.uleb128 0x19
 1682 0563 4A010000 		.4byte	.LASF59
 1683 0567 01       		.byte	0x1
 1684 0568 1A       		.byte	0x1a
 1685 0569 73050000 		.4byte	0x573
 1686 056d 05       		.uleb128 0x5
 1687 056e 03       		.byte	0x3
 1688 056f 00000000 		.4byte	ADC_countsPer10Volt
 1689 0573 05       		.uleb128 0x5
 1690 0574 4D050000 		.4byte	0x54d
 1691 0578 1A       		.uleb128 0x1a
 1692 0579 7B020000 		.4byte	.LASF60
 1693 057d 7B020000 		.4byte	.LASF60
 1694 0581 03       		.byte	0x3
 1695 0582 C0       		.byte	0xc0
 1696 0583 1A       		.uleb128 0x1a
 1697 0584 FE010000 		.4byte	.LASF61
 1698 0588 FE010000 		.4byte	.LASF61
 1699 058c 03       		.byte	0x3
 1700 058d BD       		.byte	0xbd
 1701 058e 1A       		.uleb128 0x1a
 1702 058f 64010000 		.4byte	.LASF62
 1703 0593 64010000 		.4byte	.LASF62
 1704 0597 03       		.byte	0x3
 1705 0598 DA       		.byte	0xda
 1706 0599 1A       		.uleb128 0x1a
 1707 059a F9020000 		.4byte	.LASF63
 1708 059e F9020000 		.4byte	.LASF63
 1709 05a2 03       		.byte	0x3
 1710 05a3 E7       		.byte	0xe7
 1711 05a4 00       		.byte	0
 1712              		.section	.debug_abbrev,"",%progbits
 1713              	.Ldebug_abbrev0:
 1714 0000 01       		.uleb128 0x1
 1715 0001 11       		.uleb128 0x11
 1716 0002 01       		.byte	0x1
 1717 0003 25       		.uleb128 0x25
 1718 0004 0E       		.uleb128 0xe
 1719 0005 13       		.uleb128 0x13
 1720 0006 0B       		.uleb128 0xb
 1721 0007 03       		.uleb128 0x3
 1722 0008 0E       		.uleb128 0xe
 1723 0009 1B       		.uleb128 0x1b
 1724 000a 0E       		.uleb128 0xe
 1725 000b 55       		.uleb128 0x55
 1726 000c 17       		.uleb128 0x17
 1727 000d 11       		.uleb128 0x11
 1728 000e 01       		.uleb128 0x1
 1729 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 47


 1730 0010 17       		.uleb128 0x17
 1731 0011 00       		.byte	0
 1732 0012 00       		.byte	0
 1733 0013 02       		.uleb128 0x2
 1734 0014 24       		.uleb128 0x24
 1735 0015 00       		.byte	0
 1736 0016 0B       		.uleb128 0xb
 1737 0017 0B       		.uleb128 0xb
 1738 0018 3E       		.uleb128 0x3e
 1739 0019 0B       		.uleb128 0xb
 1740 001a 03       		.uleb128 0x3
 1741 001b 0E       		.uleb128 0xe
 1742 001c 00       		.byte	0
 1743 001d 00       		.byte	0
 1744 001e 03       		.uleb128 0x3
 1745 001f 24       		.uleb128 0x24
 1746 0020 00       		.byte	0
 1747 0021 0B       		.uleb128 0xb
 1748 0022 0B       		.uleb128 0xb
 1749 0023 3E       		.uleb128 0x3e
 1750 0024 0B       		.uleb128 0xb
 1751 0025 03       		.uleb128 0x3
 1752 0026 08       		.uleb128 0x8
 1753 0027 00       		.byte	0
 1754 0028 00       		.byte	0
 1755 0029 04       		.uleb128 0x4
 1756 002a 16       		.uleb128 0x16
 1757 002b 00       		.byte	0
 1758 002c 03       		.uleb128 0x3
 1759 002d 0E       		.uleb128 0xe
 1760 002e 3A       		.uleb128 0x3a
 1761 002f 0B       		.uleb128 0xb
 1762 0030 3B       		.uleb128 0x3b
 1763 0031 05       		.uleb128 0x5
 1764 0032 49       		.uleb128 0x49
 1765 0033 13       		.uleb128 0x13
 1766 0034 00       		.byte	0
 1767 0035 00       		.byte	0
 1768 0036 05       		.uleb128 0x5
 1769 0037 35       		.uleb128 0x35
 1770 0038 00       		.byte	0
 1771 0039 49       		.uleb128 0x49
 1772 003a 13       		.uleb128 0x13
 1773 003b 00       		.byte	0
 1774 003c 00       		.byte	0
 1775 003d 06       		.uleb128 0x6
 1776 003e 2E       		.uleb128 0x2e
 1777 003f 01       		.byte	0x1
 1778 0040 3F       		.uleb128 0x3f
 1779 0041 19       		.uleb128 0x19
 1780 0042 03       		.uleb128 0x3
 1781 0043 0E       		.uleb128 0xe
 1782 0044 3A       		.uleb128 0x3a
 1783 0045 0B       		.uleb128 0xb
 1784 0046 3B       		.uleb128 0x3b
 1785 0047 0B       		.uleb128 0xb
 1786 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 48


 1787 0049 19       		.uleb128 0x19
 1788 004a 11       		.uleb128 0x11
 1789 004b 01       		.uleb128 0x1
 1790 004c 12       		.uleb128 0x12
 1791 004d 06       		.uleb128 0x6
 1792 004e 40       		.uleb128 0x40
 1793 004f 18       		.uleb128 0x18
 1794 0050 9642     		.uleb128 0x2116
 1795 0052 19       		.uleb128 0x19
 1796 0053 01       		.uleb128 0x1
 1797 0054 13       		.uleb128 0x13
 1798 0055 00       		.byte	0
 1799 0056 00       		.byte	0
 1800 0057 07       		.uleb128 0x7
 1801 0058 34       		.uleb128 0x34
 1802 0059 00       		.byte	0
 1803 005a 03       		.uleb128 0x3
 1804 005b 0E       		.uleb128 0xe
 1805 005c 3A       		.uleb128 0x3a
 1806 005d 0B       		.uleb128 0xb
 1807 005e 3B       		.uleb128 0x3b
 1808 005f 0B       		.uleb128 0xb
 1809 0060 49       		.uleb128 0x49
 1810 0061 13       		.uleb128 0x13
 1811 0062 02       		.uleb128 0x2
 1812 0063 17       		.uleb128 0x17
 1813 0064 00       		.byte	0
 1814 0065 00       		.byte	0
 1815 0066 08       		.uleb128 0x8
 1816 0067 34       		.uleb128 0x34
 1817 0068 00       		.byte	0
 1818 0069 03       		.uleb128 0x3
 1819 006a 0E       		.uleb128 0xe
 1820 006b 3A       		.uleb128 0x3a
 1821 006c 0B       		.uleb128 0xb
 1822 006d 3B       		.uleb128 0x3b
 1823 006e 0B       		.uleb128 0xb
 1824 006f 49       		.uleb128 0x49
 1825 0070 13       		.uleb128 0x13
 1826 0071 02       		.uleb128 0x2
 1827 0072 18       		.uleb128 0x18
 1828 0073 00       		.byte	0
 1829 0074 00       		.byte	0
 1830 0075 09       		.uleb128 0x9
 1831 0076 898201   		.uleb128 0x4109
 1832 0079 01       		.byte	0x1
 1833 007a 11       		.uleb128 0x11
 1834 007b 01       		.uleb128 0x1
 1835 007c 31       		.uleb128 0x31
 1836 007d 13       		.uleb128 0x13
 1837 007e 01       		.uleb128 0x1
 1838 007f 13       		.uleb128 0x13
 1839 0080 00       		.byte	0
 1840 0081 00       		.byte	0
 1841 0082 0A       		.uleb128 0xa
 1842 0083 8A8201   		.uleb128 0x410a
 1843 0086 00       		.byte	0
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 49


 1844 0087 02       		.uleb128 0x2
 1845 0088 18       		.uleb128 0x18
 1846 0089 9142     		.uleb128 0x2111
 1847 008b 18       		.uleb128 0x18
 1848 008c 00       		.byte	0
 1849 008d 00       		.byte	0
 1850 008e 0B       		.uleb128 0xb
 1851 008f 898201   		.uleb128 0x4109
 1852 0092 01       		.byte	0x1
 1853 0093 11       		.uleb128 0x11
 1854 0094 01       		.uleb128 0x1
 1855 0095 31       		.uleb128 0x31
 1856 0096 13       		.uleb128 0x13
 1857 0097 00       		.byte	0
 1858 0098 00       		.byte	0
 1859 0099 0C       		.uleb128 0xc
 1860 009a 01       		.uleb128 0x1
 1861 009b 01       		.byte	0x1
 1862 009c 49       		.uleb128 0x49
 1863 009d 13       		.uleb128 0x13
 1864 009e 01       		.uleb128 0x1
 1865 009f 13       		.uleb128 0x13
 1866 00a0 00       		.byte	0
 1867 00a1 00       		.byte	0
 1868 00a2 0D       		.uleb128 0xd
 1869 00a3 21       		.uleb128 0x21
 1870 00a4 00       		.byte	0
 1871 00a5 49       		.uleb128 0x49
 1872 00a6 13       		.uleb128 0x13
 1873 00a7 2F       		.uleb128 0x2f
 1874 00a8 0B       		.uleb128 0xb
 1875 00a9 00       		.byte	0
 1876 00aa 00       		.byte	0
 1877 00ab 0E       		.uleb128 0xe
 1878 00ac 26       		.uleb128 0x26
 1879 00ad 00       		.byte	0
 1880 00ae 49       		.uleb128 0x49
 1881 00af 13       		.uleb128 0x13
 1882 00b0 00       		.byte	0
 1883 00b1 00       		.byte	0
 1884 00b2 0F       		.uleb128 0xf
 1885 00b3 2E       		.uleb128 0x2e
 1886 00b4 01       		.byte	0x1
 1887 00b5 3F       		.uleb128 0x3f
 1888 00b6 19       		.uleb128 0x19
 1889 00b7 03       		.uleb128 0x3
 1890 00b8 0E       		.uleb128 0xe
 1891 00b9 3A       		.uleb128 0x3a
 1892 00ba 0B       		.uleb128 0xb
 1893 00bb 3B       		.uleb128 0x3b
 1894 00bc 05       		.uleb128 0x5
 1895 00bd 27       		.uleb128 0x27
 1896 00be 19       		.uleb128 0x19
 1897 00bf 11       		.uleb128 0x11
 1898 00c0 01       		.uleb128 0x1
 1899 00c1 12       		.uleb128 0x12
 1900 00c2 06       		.uleb128 0x6
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 50


 1901 00c3 40       		.uleb128 0x40
 1902 00c4 18       		.uleb128 0x18
 1903 00c5 9742     		.uleb128 0x2117
 1904 00c7 19       		.uleb128 0x19
 1905 00c8 01       		.uleb128 0x1
 1906 00c9 13       		.uleb128 0x13
 1907 00ca 00       		.byte	0
 1908 00cb 00       		.byte	0
 1909 00cc 10       		.uleb128 0x10
 1910 00cd 2E       		.uleb128 0x2e
 1911 00ce 01       		.byte	0x1
 1912 00cf 3F       		.uleb128 0x3f
 1913 00d0 19       		.uleb128 0x19
 1914 00d1 03       		.uleb128 0x3
 1915 00d2 0E       		.uleb128 0xe
 1916 00d3 3A       		.uleb128 0x3a
 1917 00d4 0B       		.uleb128 0xb
 1918 00d5 3B       		.uleb128 0x3b
 1919 00d6 0B       		.uleb128 0xb
 1920 00d7 27       		.uleb128 0x27
 1921 00d8 19       		.uleb128 0x19
 1922 00d9 11       		.uleb128 0x11
 1923 00da 01       		.uleb128 0x1
 1924 00db 12       		.uleb128 0x12
 1925 00dc 06       		.uleb128 0x6
 1926 00dd 40       		.uleb128 0x40
 1927 00de 18       		.uleb128 0x18
 1928 00df 9742     		.uleb128 0x2117
 1929 00e1 19       		.uleb128 0x19
 1930 00e2 01       		.uleb128 0x1
 1931 00e3 13       		.uleb128 0x13
 1932 00e4 00       		.byte	0
 1933 00e5 00       		.byte	0
 1934 00e6 11       		.uleb128 0x11
 1935 00e7 898201   		.uleb128 0x4109
 1936 00ea 00       		.byte	0
 1937 00eb 11       		.uleb128 0x11
 1938 00ec 01       		.uleb128 0x1
 1939 00ed 31       		.uleb128 0x31
 1940 00ee 13       		.uleb128 0x13
 1941 00ef 00       		.byte	0
 1942 00f0 00       		.byte	0
 1943 00f1 12       		.uleb128 0x12
 1944 00f2 2E       		.uleb128 0x2e
 1945 00f3 00       		.byte	0
 1946 00f4 3F       		.uleb128 0x3f
 1947 00f5 19       		.uleb128 0x19
 1948 00f6 03       		.uleb128 0x3
 1949 00f7 0E       		.uleb128 0xe
 1950 00f8 3A       		.uleb128 0x3a
 1951 00f9 0B       		.uleb128 0xb
 1952 00fa 3B       		.uleb128 0x3b
 1953 00fb 05       		.uleb128 0x5
 1954 00fc 27       		.uleb128 0x27
 1955 00fd 19       		.uleb128 0x19
 1956 00fe 11       		.uleb128 0x11
 1957 00ff 01       		.uleb128 0x1
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 51


 1958 0100 12       		.uleb128 0x12
 1959 0101 06       		.uleb128 0x6
 1960 0102 40       		.uleb128 0x40
 1961 0103 18       		.uleb128 0x18
 1962 0104 9742     		.uleb128 0x2117
 1963 0106 19       		.uleb128 0x19
 1964 0107 00       		.byte	0
 1965 0108 00       		.byte	0
 1966 0109 13       		.uleb128 0x13
 1967 010a 2E       		.uleb128 0x2e
 1968 010b 01       		.byte	0x1
 1969 010c 3F       		.uleb128 0x3f
 1970 010d 19       		.uleb128 0x19
 1971 010e 03       		.uleb128 0x3
 1972 010f 0E       		.uleb128 0xe
 1973 0110 3A       		.uleb128 0x3a
 1974 0111 0B       		.uleb128 0xb
 1975 0112 3B       		.uleb128 0x3b
 1976 0113 05       		.uleb128 0x5
 1977 0114 27       		.uleb128 0x27
 1978 0115 19       		.uleb128 0x19
 1979 0116 49       		.uleb128 0x49
 1980 0117 13       		.uleb128 0x13
 1981 0118 11       		.uleb128 0x11
 1982 0119 01       		.uleb128 0x1
 1983 011a 12       		.uleb128 0x12
 1984 011b 06       		.uleb128 0x6
 1985 011c 40       		.uleb128 0x40
 1986 011d 18       		.uleb128 0x18
 1987 011e 9742     		.uleb128 0x2117
 1988 0120 19       		.uleb128 0x19
 1989 0121 01       		.uleb128 0x1
 1990 0122 13       		.uleb128 0x13
 1991 0123 00       		.byte	0
 1992 0124 00       		.byte	0
 1993 0125 14       		.uleb128 0x14
 1994 0126 05       		.uleb128 0x5
 1995 0127 00       		.byte	0
 1996 0128 03       		.uleb128 0x3
 1997 0129 0E       		.uleb128 0xe
 1998 012a 3A       		.uleb128 0x3a
 1999 012b 0B       		.uleb128 0xb
 2000 012c 3B       		.uleb128 0x3b
 2001 012d 05       		.uleb128 0x5
 2002 012e 49       		.uleb128 0x49
 2003 012f 13       		.uleb128 0x13
 2004 0130 02       		.uleb128 0x2
 2005 0131 17       		.uleb128 0x17
 2006 0132 00       		.byte	0
 2007 0133 00       		.byte	0
 2008 0134 15       		.uleb128 0x15
 2009 0135 34       		.uleb128 0x34
 2010 0136 00       		.byte	0
 2011 0137 03       		.uleb128 0x3
 2012 0138 0E       		.uleb128 0xe
 2013 0139 3A       		.uleb128 0x3a
 2014 013a 0B       		.uleb128 0xb
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 52


 2015 013b 3B       		.uleb128 0x3b
 2016 013c 05       		.uleb128 0x5
 2017 013d 49       		.uleb128 0x49
 2018 013e 13       		.uleb128 0x13
 2019 013f 02       		.uleb128 0x2
 2020 0140 17       		.uleb128 0x17
 2021 0141 00       		.byte	0
 2022 0142 00       		.byte	0
 2023 0143 16       		.uleb128 0x16
 2024 0144 2E       		.uleb128 0x2e
 2025 0145 01       		.byte	0x1
 2026 0146 3F       		.uleb128 0x3f
 2027 0147 19       		.uleb128 0x19
 2028 0148 03       		.uleb128 0x3
 2029 0149 0E       		.uleb128 0xe
 2030 014a 3A       		.uleb128 0x3a
 2031 014b 0B       		.uleb128 0xb
 2032 014c 3B       		.uleb128 0x3b
 2033 014d 05       		.uleb128 0x5
 2034 014e 27       		.uleb128 0x27
 2035 014f 19       		.uleb128 0x19
 2036 0150 49       		.uleb128 0x49
 2037 0151 13       		.uleb128 0x13
 2038 0152 11       		.uleb128 0x11
 2039 0153 01       		.uleb128 0x1
 2040 0154 12       		.uleb128 0x12
 2041 0155 06       		.uleb128 0x6
 2042 0156 40       		.uleb128 0x40
 2043 0157 18       		.uleb128 0x18
 2044 0158 9642     		.uleb128 0x2116
 2045 015a 19       		.uleb128 0x19
 2046 015b 01       		.uleb128 0x1
 2047 015c 13       		.uleb128 0x13
 2048 015d 00       		.byte	0
 2049 015e 00       		.byte	0
 2050 015f 17       		.uleb128 0x17
 2051 0160 34       		.uleb128 0x34
 2052 0161 00       		.byte	0
 2053 0162 03       		.uleb128 0x3
 2054 0163 0E       		.uleb128 0xe
 2055 0164 3A       		.uleb128 0x3a
 2056 0165 0B       		.uleb128 0xb
 2057 0166 3B       		.uleb128 0x3b
 2058 0167 05       		.uleb128 0x5
 2059 0168 49       		.uleb128 0x49
 2060 0169 13       		.uleb128 0x13
 2061 016a 02       		.uleb128 0x2
 2062 016b 18       		.uleb128 0x18
 2063 016c 00       		.byte	0
 2064 016d 00       		.byte	0
 2065 016e 18       		.uleb128 0x18
 2066 016f 34       		.uleb128 0x34
 2067 0170 00       		.byte	0
 2068 0171 03       		.uleb128 0x3
 2069 0172 0E       		.uleb128 0xe
 2070 0173 3A       		.uleb128 0x3a
 2071 0174 0B       		.uleb128 0xb
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 53


 2072 0175 3B       		.uleb128 0x3b
 2073 0176 05       		.uleb128 0x5
 2074 0177 49       		.uleb128 0x49
 2075 0178 13       		.uleb128 0x13
 2076 0179 00       		.byte	0
 2077 017a 00       		.byte	0
 2078 017b 19       		.uleb128 0x19
 2079 017c 34       		.uleb128 0x34
 2080 017d 00       		.byte	0
 2081 017e 03       		.uleb128 0x3
 2082 017f 0E       		.uleb128 0xe
 2083 0180 3A       		.uleb128 0x3a
 2084 0181 0B       		.uleb128 0xb
 2085 0182 3B       		.uleb128 0x3b
 2086 0183 0B       		.uleb128 0xb
 2087 0184 49       		.uleb128 0x49
 2088 0185 13       		.uleb128 0x13
 2089 0186 3F       		.uleb128 0x3f
 2090 0187 19       		.uleb128 0x19
 2091 0188 02       		.uleb128 0x2
 2092 0189 18       		.uleb128 0x18
 2093 018a 00       		.byte	0
 2094 018b 00       		.byte	0
 2095 018c 1A       		.uleb128 0x1a
 2096 018d 2E       		.uleb128 0x2e
 2097 018e 00       		.byte	0
 2098 018f 3F       		.uleb128 0x3f
 2099 0190 19       		.uleb128 0x19
 2100 0191 3C       		.uleb128 0x3c
 2101 0192 19       		.uleb128 0x19
 2102 0193 6E       		.uleb128 0x6e
 2103 0194 0E       		.uleb128 0xe
 2104 0195 03       		.uleb128 0x3
 2105 0196 0E       		.uleb128 0xe
 2106 0197 3A       		.uleb128 0x3a
 2107 0198 0B       		.uleb128 0xb
 2108 0199 3B       		.uleb128 0x3b
 2109 019a 0B       		.uleb128 0xb
 2110 019b 00       		.byte	0
 2111 019c 00       		.byte	0
 2112 019d 00       		.byte	0
 2113              		.section	.debug_loc,"",%progbits
 2114              	.Ldebug_loc0:
 2115              	.LLST0:
 2116 0000 7E000000 		.4byte	.LVL5
 2117 0004 82000000 		.4byte	.LVL6
 2118 0008 0200     		.2byte	0x2
 2119 000a 30       		.byte	0x30
 2120 000b 9F       		.byte	0x9f
 2121 000c 82000000 		.4byte	.LVL6
 2122 0010 12010000 		.4byte	.LVL23
 2123 0014 0100     		.2byte	0x1
 2124 0016 54       		.byte	0x54
 2125 0017 00000000 		.4byte	0
 2126 001b 00000000 		.4byte	0
 2127              	.LLST1:
 2128 001f 72000000 		.4byte	.LVL2
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 54


 2129 0023 78000000 		.4byte	.LVL3
 2130 0027 0700     		.2byte	0x7
 2131 0029 71       		.byte	0x71
 2132 002a 00       		.sleb128 0
 2133 002b 40       		.byte	0x40
 2134 002c 49       		.byte	0x49
 2135 002d 24       		.byte	0x24
 2136 002e 21       		.byte	0x21
 2137 002f 9F       		.byte	0x9f
 2138 0030 7C000000 		.4byte	.LVL4
 2139 0034 82000000 		.4byte	.LVL6
 2140 0038 0100     		.2byte	0x1
 2141 003a 53       		.byte	0x53
 2142 003b 8E000000 		.4byte	.LVL7
 2143 003f A0000000 		.4byte	.LVL9
 2144 0043 0100     		.2byte	0x1
 2145 0045 53       		.byte	0x53
 2146 0046 A0000000 		.4byte	.LVL9
 2147 004a A4000000 		.4byte	.LVL10
 2148 004e 0200     		.2byte	0x2
 2149 0050 72       		.byte	0x72
 2150 0051 00       		.sleb128 0
 2151 0052 A4000000 		.4byte	.LVL10
 2152 0056 B0000000 		.4byte	.LVL11
 2153 005a 0700     		.2byte	0x7
 2154 005c 74       		.byte	0x74
 2155 005d 00       		.sleb128 0
 2156 005e 32       		.byte	0x32
 2157 005f 24       		.byte	0x24
 2158 0060 7C       		.byte	0x7c
 2159 0061 00       		.sleb128 0
 2160 0062 22       		.byte	0x22
 2161 0063 B0000000 		.4byte	.LVL11
 2162 0067 B4000000 		.4byte	.LVL12
 2163 006b 1500     		.2byte	0x15
 2164 006d 70       		.byte	0x70
 2165 006e 00       		.sleb128 0
 2166 006f 0A       		.byte	0xa
 2167 0070 0037     		.2byte	0x3700
 2168 0072 1A       		.byte	0x1a
 2169 0073 74       		.byte	0x74
 2170 0074 00       		.sleb128 0
 2171 0075 03       		.byte	0x3
 2172 0076 10000000 		.4byte	.LANCHOR0+16
 2173 007a 22       		.byte	0x22
 2174 007b 94       		.byte	0x94
 2175 007c 01       		.byte	0x1
 2176 007d 08       		.byte	0x8
 2177 007e FF       		.byte	0xff
 2178 007f 1A       		.byte	0x1a
 2179 0080 21       		.byte	0x21
 2180 0081 9F       		.byte	0x9f
 2181 0082 B4000000 		.4byte	.LVL12
 2182 0086 BE000000 		.4byte	.LVL13
 2183 008a 1400     		.2byte	0x14
 2184 008c 70       		.byte	0x70
 2185 008d 00       		.sleb128 0
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 55


 2186 008e 0A       		.byte	0xa
 2187 008f 0037     		.2byte	0x3700
 2188 0091 1A       		.byte	0x1a
 2189 0092 72       		.byte	0x72
 2190 0093 00       		.sleb128 0
 2191 0094 74       		.byte	0x74
 2192 0095 00       		.sleb128 0
 2193 0096 22       		.byte	0x22
 2194 0097 23       		.byte	0x23
 2195 0098 10       		.uleb128 0x10
 2196 0099 94       		.byte	0x94
 2197 009a 01       		.byte	0x1
 2198 009b 08       		.byte	0x8
 2199 009c FF       		.byte	0xff
 2200 009d 1A       		.byte	0x1a
 2201 009e 21       		.byte	0x21
 2202 009f 9F       		.byte	0x9f
 2203 00a0 BE000000 		.4byte	.LVL13
 2204 00a4 CE000000 		.4byte	.LVL14
 2205 00a8 1500     		.2byte	0x15
 2206 00aa 70       		.byte	0x70
 2207 00ab 00       		.sleb128 0
 2208 00ac 0A       		.byte	0xa
 2209 00ad 0037     		.2byte	0x3700
 2210 00af 1A       		.byte	0x1a
 2211 00b0 74       		.byte	0x74
 2212 00b1 00       		.sleb128 0
 2213 00b2 03       		.byte	0x3
 2214 00b3 10000000 		.4byte	.LANCHOR0+16
 2215 00b7 22       		.byte	0x22
 2216 00b8 94       		.byte	0x94
 2217 00b9 01       		.byte	0x1
 2218 00ba 08       		.byte	0x8
 2219 00bb FF       		.byte	0xff
 2220 00bc 1A       		.byte	0x1a
 2221 00bd 21       		.byte	0x21
 2222 00be 9F       		.byte	0x9f
 2223 00bf CE000000 		.4byte	.LVL14
 2224 00c3 D4000000 		.4byte	.LVL15
 2225 00c7 1400     		.2byte	0x14
 2226 00c9 70       		.byte	0x70
 2227 00ca 00       		.sleb128 0
 2228 00cb 0A       		.byte	0xa
 2229 00cc 0037     		.2byte	0x3700
 2230 00ce 1A       		.byte	0x1a
 2231 00cf 72       		.byte	0x72
 2232 00d0 00       		.sleb128 0
 2233 00d1 74       		.byte	0x74
 2234 00d2 00       		.sleb128 0
 2235 00d3 22       		.byte	0x22
 2236 00d4 23       		.byte	0x23
 2237 00d5 10       		.uleb128 0x10
 2238 00d6 94       		.byte	0x94
 2239 00d7 01       		.byte	0x1
 2240 00d8 08       		.byte	0x8
 2241 00d9 FF       		.byte	0xff
 2242 00da 1A       		.byte	0x1a
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 56


 2243 00db 21       		.byte	0x21
 2244 00dc 9F       		.byte	0x9f
 2245 00dd D4000000 		.4byte	.LVL15
 2246 00e1 D6000000 		.4byte	.LVL16
 2247 00e5 1500     		.2byte	0x15
 2248 00e7 70       		.byte	0x70
 2249 00e8 00       		.sleb128 0
 2250 00e9 0A       		.byte	0xa
 2251 00ea 0037     		.2byte	0x3700
 2252 00ec 1A       		.byte	0x1a
 2253 00ed 74       		.byte	0x74
 2254 00ee 00       		.sleb128 0
 2255 00ef 03       		.byte	0x3
 2256 00f0 10000000 		.4byte	.LANCHOR0+16
 2257 00f4 22       		.byte	0x22
 2258 00f5 94       		.byte	0x94
 2259 00f6 01       		.byte	0x1
 2260 00f7 08       		.byte	0x8
 2261 00f8 FF       		.byte	0xff
 2262 00f9 1A       		.byte	0x1a
 2263 00fa 21       		.byte	0x21
 2264 00fb 9F       		.byte	0x9f
 2265 00fc D6000000 		.4byte	.LVL16
 2266 0100 DA000000 		.4byte	.LVL17
 2267 0104 1E00     		.2byte	0x1e
 2268 0106 74       		.byte	0x74
 2269 0107 00       		.sleb128 0
 2270 0108 32       		.byte	0x32
 2271 0109 24       		.byte	0x24
 2272 010a 03       		.byte	0x3
 2273 010b 00000000 		.4byte	.LANCHOR0
 2274 010f 22       		.byte	0x22
 2275 0110 06       		.byte	0x6
 2276 0111 0A       		.byte	0xa
 2277 0112 0037     		.2byte	0x3700
 2278 0114 1A       		.byte	0x1a
 2279 0115 74       		.byte	0x74
 2280 0116 00       		.sleb128 0
 2281 0117 03       		.byte	0x3
 2282 0118 10000000 		.4byte	.LANCHOR0+16
 2283 011c 22       		.byte	0x22
 2284 011d 94       		.byte	0x94
 2285 011e 01       		.byte	0x1
 2286 011f 08       		.byte	0x8
 2287 0120 FF       		.byte	0xff
 2288 0121 1A       		.byte	0x1a
 2289 0122 21       		.byte	0x21
 2290 0123 9F       		.byte	0x9f
 2291 0124 DA000000 		.4byte	.LVL17
 2292 0128 DC000000 		.4byte	.LVL18
 2293 012c 1500     		.2byte	0x15
 2294 012e 70       		.byte	0x70
 2295 012f 00       		.sleb128 0
 2296 0130 0A       		.byte	0xa
 2297 0131 0037     		.2byte	0x3700
 2298 0133 1A       		.byte	0x1a
 2299 0134 74       		.byte	0x74
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 57


 2300 0135 00       		.sleb128 0
 2301 0136 03       		.byte	0x3
 2302 0137 10000000 		.4byte	.LANCHOR0+16
 2303 013b 22       		.byte	0x22
 2304 013c 94       		.byte	0x94
 2305 013d 01       		.byte	0x1
 2306 013e 08       		.byte	0x8
 2307 013f FF       		.byte	0xff
 2308 0140 1A       		.byte	0x1a
 2309 0141 21       		.byte	0x21
 2310 0142 9F       		.byte	0x9f
 2311 0143 DC000000 		.4byte	.LVL18
 2312 0147 0E010000 		.4byte	.LVL22
 2313 014b 1E00     		.2byte	0x1e
 2314 014d 74       		.byte	0x74
 2315 014e 00       		.sleb128 0
 2316 014f 32       		.byte	0x32
 2317 0150 24       		.byte	0x24
 2318 0151 03       		.byte	0x3
 2319 0152 00000000 		.4byte	.LANCHOR0
 2320 0156 22       		.byte	0x22
 2321 0157 06       		.byte	0x6
 2322 0158 0A       		.byte	0xa
 2323 0159 0037     		.2byte	0x3700
 2324 015b 1A       		.byte	0x1a
 2325 015c 74       		.byte	0x74
 2326 015d 00       		.sleb128 0
 2327 015e 03       		.byte	0x3
 2328 015f 10000000 		.4byte	.LANCHOR0+16
 2329 0163 22       		.byte	0x22
 2330 0164 94       		.byte	0x94
 2331 0165 01       		.byte	0x1
 2332 0166 08       		.byte	0x8
 2333 0167 FF       		.byte	0xff
 2334 0168 1A       		.byte	0x1a
 2335 0169 21       		.byte	0x21
 2336 016a 9F       		.byte	0x9f
 2337 016b 00000000 		.4byte	0
 2338 016f 00000000 		.4byte	0
 2339              	.LLST2:
 2340 0173 DE000000 		.4byte	.LVL19
 2341 0177 F8000000 		.4byte	.LVL20
 2342 017b 0100     		.2byte	0x1
 2343 017d 50       		.byte	0x50
 2344 017e 00000000 		.4byte	0
 2345 0182 00000000 		.4byte	0
 2346              	.LLST3:
 2347 0186 00000000 		.4byte	.LVL27
 2348 018a 06000000 		.4byte	.LVL29
 2349 018e 0100     		.2byte	0x1
 2350 0190 50       		.byte	0x50
 2351 0191 06000000 		.4byte	.LVL29
 2352 0195 1A000000 		.4byte	.LVL31
 2353 0199 0100     		.2byte	0x1
 2354 019b 52       		.byte	0x52
 2355 019c 1A000000 		.4byte	.LVL31
 2356 01a0 20000000 		.4byte	.LVL32
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 58


 2357 01a4 0400     		.2byte	0x4
 2358 01a6 F3       		.byte	0xf3
 2359 01a7 01       		.uleb128 0x1
 2360 01a8 50       		.byte	0x50
 2361 01a9 9F       		.byte	0x9f
 2362 01aa 20000000 		.4byte	.LVL32
 2363 01ae 22000000 		.4byte	.LVL33
 2364 01b2 0100     		.2byte	0x1
 2365 01b4 50       		.byte	0x50
 2366 01b5 22000000 		.4byte	.LVL33
 2367 01b9 28000000 		.4byte	.LFE8
 2368 01bd 0400     		.2byte	0x4
 2369 01bf F3       		.byte	0xf3
 2370 01c0 01       		.uleb128 0x1
 2371 01c1 50       		.byte	0x50
 2372 01c2 9F       		.byte	0x9f
 2373 01c3 00000000 		.4byte	0
 2374 01c7 00000000 		.4byte	0
 2375              	.LLST4:
 2376 01cb 02000000 		.4byte	.LVL28
 2377 01cf 06000000 		.4byte	.LVL29
 2378 01d3 0200     		.2byte	0x2
 2379 01d5 30       		.byte	0x30
 2380 01d6 9F       		.byte	0x9f
 2381 01d7 0E000000 		.4byte	.LVL30
 2382 01db 20000000 		.4byte	.LVL32
 2383 01df 0100     		.2byte	0x1
 2384 01e1 50       		.byte	0x50
 2385 01e2 20000000 		.4byte	.LVL32
 2386 01e6 22000000 		.4byte	.LVL33
 2387 01ea 0200     		.2byte	0x2
 2388 01ec 30       		.byte	0x30
 2389 01ed 9F       		.byte	0x9f
 2390 01ee 22000000 		.4byte	.LVL33
 2391 01f2 28000000 		.4byte	.LFE8
 2392 01f6 0100     		.2byte	0x1
 2393 01f8 50       		.byte	0x50
 2394 01f9 00000000 		.4byte	0
 2395 01fd 00000000 		.4byte	0
 2396              	.LLST5:
 2397 0201 00000000 		.4byte	.LVL34
 2398 0205 0A000000 		.4byte	.LVL35
 2399 0209 0100     		.2byte	0x1
 2400 020b 50       		.byte	0x50
 2401 020c 0A000000 		.4byte	.LVL35
 2402 0210 14000000 		.4byte	.LVL37
 2403 0214 0100     		.2byte	0x1
 2404 0216 54       		.byte	0x54
 2405 0217 14000000 		.4byte	.LVL37
 2406 021b 22000000 		.4byte	.LVL39
 2407 021f 0400     		.2byte	0x4
 2408 0221 F3       		.byte	0xf3
 2409 0222 01       		.uleb128 0x1
 2410 0223 50       		.byte	0x50
 2411 0224 9F       		.byte	0x9f
 2412 0225 22000000 		.4byte	.LVL39
 2413 0229 24000000 		.4byte	.LVL40
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 59


 2414 022d 0100     		.2byte	0x1
 2415 022f 54       		.byte	0x54
 2416 0230 24000000 		.4byte	.LVL40
 2417 0234 2C000000 		.4byte	.LFE9
 2418 0238 0400     		.2byte	0x4
 2419 023a F3       		.byte	0xf3
 2420 023b 01       		.uleb128 0x1
 2421 023c 50       		.byte	0x50
 2422 023d 9F       		.byte	0x9f
 2423 023e 00000000 		.4byte	0
 2424 0242 00000000 		.4byte	0
 2425              	.LLST6:
 2426 0246 20000000 		.4byte	.LVL38
 2427 024a 22000000 		.4byte	.LVL39
 2428 024e 0100     		.2byte	0x1
 2429 0250 50       		.byte	0x50
 2430 0251 24000000 		.4byte	.LVL40
 2431 0255 26000000 		.4byte	.LVL41
 2432 0259 0100     		.2byte	0x1
 2433 025b 50       		.byte	0x50
 2434 025c 00000000 		.4byte	0
 2435 0260 00000000 		.4byte	0
 2436              	.LLST7:
 2437 0264 00000000 		.4byte	.LVL42
 2438 0268 04000000 		.4byte	.LVL43
 2439 026c 0100     		.2byte	0x1
 2440 026e 50       		.byte	0x50
 2441 026f 04000000 		.4byte	.LVL43
 2442 0273 10000000 		.4byte	.LFE10
 2443 0277 0400     		.2byte	0x4
 2444 0279 F3       		.byte	0xf3
 2445 027a 01       		.uleb128 0x1
 2446 027b 50       		.byte	0x50
 2447 027c 9F       		.byte	0x9f
 2448 027d 00000000 		.4byte	0
 2449 0281 00000000 		.4byte	0
 2450              	.LLST8:
 2451 0285 00000000 		.4byte	.LVL44
 2452 0289 0E000000 		.4byte	.LVL45
 2453 028d 0100     		.2byte	0x1
 2454 028f 50       		.byte	0x50
 2455 0290 0E000000 		.4byte	.LVL45
 2456 0294 1C000000 		.4byte	.LFE11
 2457 0298 0400     		.2byte	0x4
 2458 029a F3       		.byte	0xf3
 2459 029b 01       		.uleb128 0x1
 2460 029c 50       		.byte	0x50
 2461 029d 9F       		.byte	0x9f
 2462 029e 00000000 		.4byte	0
 2463 02a2 00000000 		.4byte	0
 2464              	.LLST9:
 2465 02a6 00000000 		.4byte	.LVL46
 2466 02aa 0E000000 		.4byte	.LVL47
 2467 02ae 0100     		.2byte	0x1
 2468 02b0 50       		.byte	0x50
 2469 02b1 0E000000 		.4byte	.LVL47
 2470 02b5 18000000 		.4byte	.LFE12
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 60


 2471 02b9 0400     		.2byte	0x4
 2472 02bb F3       		.byte	0xf3
 2473 02bc 01       		.uleb128 0x1
 2474 02bd 50       		.byte	0x50
 2475 02be 9F       		.byte	0x9f
 2476 02bf 00000000 		.4byte	0
 2477 02c3 00000000 		.4byte	0
 2478              	.LLST10:
 2479 02c7 00000000 		.4byte	.LVL48
 2480 02cb 04000000 		.4byte	.LVL49
 2481 02cf 0100     		.2byte	0x1
 2482 02d1 50       		.byte	0x50
 2483 02d2 04000000 		.4byte	.LVL49
 2484 02d6 10000000 		.4byte	.LFE13
 2485 02da 0400     		.2byte	0x4
 2486 02dc F3       		.byte	0xf3
 2487 02dd 01       		.uleb128 0x1
 2488 02de 50       		.byte	0x50
 2489 02df 9F       		.byte	0x9f
 2490 02e0 00000000 		.4byte	0
 2491 02e4 00000000 		.4byte	0
 2492              	.LLST11:
 2493 02e8 00000000 		.4byte	.LVL50
 2494 02ec 04000000 		.4byte	.LVL51
 2495 02f0 0100     		.2byte	0x1
 2496 02f2 50       		.byte	0x50
 2497 02f3 04000000 		.4byte	.LVL51
 2498 02f7 10000000 		.4byte	.LFE14
 2499 02fb 0400     		.2byte	0x4
 2500 02fd F3       		.byte	0xf3
 2501 02fe 01       		.uleb128 0x1
 2502 02ff 50       		.byte	0x50
 2503 0300 9F       		.byte	0x9f
 2504 0301 00000000 		.4byte	0
 2505 0305 00000000 		.4byte	0
 2506              	.LLST12:
 2507 0309 00000000 		.4byte	.LVL52
 2508 030d 0C000000 		.4byte	.LVL53
 2509 0311 0100     		.2byte	0x1
 2510 0313 50       		.byte	0x50
 2511 0314 0C000000 		.4byte	.LVL53
 2512 0318 12000000 		.4byte	.LVL55
 2513 031c 0100     		.2byte	0x1
 2514 031e 54       		.byte	0x54
 2515 031f 12000000 		.4byte	.LVL55
 2516 0323 1C000000 		.4byte	.LFE15
 2517 0327 0400     		.2byte	0x4
 2518 0329 F3       		.byte	0xf3
 2519 032a 01       		.uleb128 0x1
 2520 032b 50       		.byte	0x50
 2521 032c 9F       		.byte	0x9f
 2522 032d 00000000 		.4byte	0
 2523 0331 00000000 		.4byte	0
 2524              	.LLST13:
 2525 0335 00000000 		.4byte	.LVL52
 2526 0339 0F000000 		.4byte	.LVL54-1
 2527 033d 0100     		.2byte	0x1
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 61


 2528 033f 51       		.byte	0x51
 2529 0340 0F000000 		.4byte	.LVL54-1
 2530 0344 1C000000 		.4byte	.LFE15
 2531 0348 0400     		.2byte	0x4
 2532 034a F3       		.byte	0xf3
 2533 034b 01       		.uleb128 0x1
 2534 034c 51       		.byte	0x51
 2535 034d 9F       		.byte	0x9f
 2536 034e 00000000 		.4byte	0
 2537 0352 00000000 		.4byte	0
 2538              	.LLST14:
 2539 0356 00000000 		.4byte	.LVL56
 2540 035a 0C000000 		.4byte	.LVL57
 2541 035e 0100     		.2byte	0x1
 2542 0360 50       		.byte	0x50
 2543 0361 0C000000 		.4byte	.LVL57
 2544 0365 12000000 		.4byte	.LVL59
 2545 0369 0100     		.2byte	0x1
 2546 036b 54       		.byte	0x54
 2547 036c 12000000 		.4byte	.LVL59
 2548 0370 1C000000 		.4byte	.LFE16
 2549 0374 0400     		.2byte	0x4
 2550 0376 F3       		.byte	0xf3
 2551 0377 01       		.uleb128 0x1
 2552 0378 50       		.byte	0x50
 2553 0379 9F       		.byte	0x9f
 2554 037a 00000000 		.4byte	0
 2555 037e 00000000 		.4byte	0
 2556              	.LLST15:
 2557 0382 00000000 		.4byte	.LVL56
 2558 0386 0F000000 		.4byte	.LVL58-1
 2559 038a 0100     		.2byte	0x1
 2560 038c 51       		.byte	0x51
 2561 038d 0F000000 		.4byte	.LVL58-1
 2562 0391 16000000 		.4byte	.LVL60
 2563 0395 0100     		.2byte	0x1
 2564 0397 55       		.byte	0x55
 2565 0398 16000000 		.4byte	.LVL60
 2566 039c 1C000000 		.4byte	.LFE16
 2567 03a0 0800     		.2byte	0x8
 2568 03a2 F3       		.byte	0xf3
 2569 03a3 01       		.uleb128 0x1
 2570 03a4 50       		.byte	0x50
 2571 03a5 32       		.byte	0x32
 2572 03a6 24       		.byte	0x24
 2573 03a7 73       		.byte	0x73
 2574 03a8 00       		.sleb128 0
 2575 03a9 22       		.byte	0x22
 2576 03aa 00000000 		.4byte	0
 2577 03ae 00000000 		.4byte	0
 2578              	.LLST16:
 2579 03b2 00000000 		.4byte	.LVL61
 2580 03b6 0C000000 		.4byte	.LVL62
 2581 03ba 0100     		.2byte	0x1
 2582 03bc 50       		.byte	0x50
 2583 03bd 0C000000 		.4byte	.LVL62
 2584 03c1 44000000 		.4byte	.LVL65
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 62


 2585 03c5 0100     		.2byte	0x1
 2586 03c7 54       		.byte	0x54
 2587 03c8 44000000 		.4byte	.LVL65
 2588 03cc 5C000000 		.4byte	.LFE17
 2589 03d0 0400     		.2byte	0x4
 2590 03d2 F3       		.byte	0xf3
 2591 03d3 01       		.uleb128 0x1
 2592 03d4 50       		.byte	0x50
 2593 03d5 9F       		.byte	0x9f
 2594 03d6 00000000 		.4byte	0
 2595 03da 00000000 		.4byte	0
 2596              	.LLST17:
 2597 03de 00000000 		.4byte	.LVL61
 2598 03e2 0F000000 		.4byte	.LVL63-1
 2599 03e6 0100     		.2byte	0x1
 2600 03e8 51       		.byte	0x51
 2601 03e9 0F000000 		.4byte	.LVL63-1
 2602 03ed 1C000000 		.4byte	.LVL64
 2603 03f1 0400     		.2byte	0x4
 2604 03f3 F3       		.byte	0xf3
 2605 03f4 01       		.uleb128 0x1
 2606 03f5 51       		.byte	0x51
 2607 03f6 9F       		.byte	0x9f
 2608 03f7 1C000000 		.4byte	.LVL64
 2609 03fb 48000000 		.4byte	.LVL66
 2610 03ff 0100     		.2byte	0x1
 2611 0401 51       		.byte	0x51
 2612 0402 00000000 		.4byte	0
 2613 0406 00000000 		.4byte	0
 2614              	.LLST18:
 2615 040a 00000000 		.4byte	.LVL69
 2616 040e 0C000000 		.4byte	.LVL70
 2617 0412 0100     		.2byte	0x1
 2618 0414 50       		.byte	0x50
 2619 0415 0C000000 		.4byte	.LVL70
 2620 0419 28000000 		.4byte	.LVL74
 2621 041d 0100     		.2byte	0x1
 2622 041f 55       		.byte	0x55
 2623 0420 28000000 		.4byte	.LVL74
 2624 0424 40000000 		.4byte	.LFE18
 2625 0428 0400     		.2byte	0x4
 2626 042a F3       		.byte	0xf3
 2627 042b 01       		.uleb128 0x1
 2628 042c 50       		.byte	0x50
 2629 042d 9F       		.byte	0x9f
 2630 042e 00000000 		.4byte	0
 2631 0432 00000000 		.4byte	0
 2632              	.LLST19:
 2633 0436 00000000 		.4byte	.LVL69
 2634 043a 0F000000 		.4byte	.LVL71-1
 2635 043e 0100     		.2byte	0x1
 2636 0440 51       		.byte	0x51
 2637 0441 0F000000 		.4byte	.LVL71-1
 2638 0445 1C000000 		.4byte	.LVL72
 2639 0449 0400     		.2byte	0x4
 2640 044b F3       		.byte	0xf3
 2641 044c 01       		.uleb128 0x1
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 63


 2642 044d 51       		.byte	0x51
 2643 044e 9F       		.byte	0x9f
 2644 044f 1C000000 		.4byte	.LVL72
 2645 0453 25000000 		.4byte	.LVL73-1
 2646 0457 0100     		.2byte	0x1
 2647 0459 50       		.byte	0x50
 2648 045a 00000000 		.4byte	0
 2649 045e 00000000 		.4byte	0
 2650              	.LLST20:
 2651 0462 00000000 		.4byte	.LVL76
 2652 0466 0C000000 		.4byte	.LVL77
 2653 046a 0100     		.2byte	0x1
 2654 046c 50       		.byte	0x50
 2655 046d 0C000000 		.4byte	.LVL77
 2656 0471 2A000000 		.4byte	.LVL82
 2657 0475 0100     		.2byte	0x1
 2658 0477 54       		.byte	0x54
 2659 0478 2A000000 		.4byte	.LVL82
 2660 047c 48000000 		.4byte	.LFE19
 2661 0480 0400     		.2byte	0x4
 2662 0482 F3       		.byte	0xf3
 2663 0483 01       		.uleb128 0x1
 2664 0484 50       		.byte	0x50
 2665 0485 9F       		.byte	0x9f
 2666 0486 00000000 		.4byte	0
 2667 048a 00000000 		.4byte	0
 2668              	.LLST21:
 2669 048e 00000000 		.4byte	.LVL76
 2670 0492 0F000000 		.4byte	.LVL78-1
 2671 0496 0100     		.2byte	0x1
 2672 0498 51       		.byte	0x51
 2673 0499 0F000000 		.4byte	.LVL78-1
 2674 049d 1C000000 		.4byte	.LVL79
 2675 04a1 0400     		.2byte	0x4
 2676 04a3 F3       		.byte	0xf3
 2677 04a4 01       		.uleb128 0x1
 2678 04a5 51       		.byte	0x51
 2679 04a6 9F       		.byte	0x9f
 2680 04a7 1C000000 		.4byte	.LVL79
 2681 04ab 1F000000 		.4byte	.LVL80-1
 2682 04af 0100     		.2byte	0x1
 2683 04b1 50       		.byte	0x50
 2684 04b2 00000000 		.4byte	0
 2685 04b6 00000000 		.4byte	0
 2686              		.section	.debug_aranges,"",%progbits
 2687 0000 A4000000 		.4byte	0xa4
 2688 0004 0200     		.2byte	0x2
 2689 0006 00000000 		.4byte	.Ldebug_info0
 2690 000a 04       		.byte	0x4
 2691 000b 00       		.byte	0
 2692 000c 0000     		.2byte	0
 2693 000e 0000     		.2byte	0
 2694 0010 00000000 		.4byte	.LFB3
 2695 0014 88010000 		.4byte	.LFE3-.LFB3
 2696 0018 00000000 		.4byte	.LFB4
 2697 001c 30000000 		.4byte	.LFE4-.LFB4
 2698 0020 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 64


 2699 0024 20000000 		.4byte	.LFE2-.LFB2
 2700 0028 00000000 		.4byte	.LFB5
 2701 002c 10000000 		.4byte	.LFE5-.LFB5
 2702 0030 00000000 		.4byte	.LFB6
 2703 0034 0C000000 		.4byte	.LFE6-.LFB6
 2704 0038 00000000 		.4byte	.LFB7
 2705 003c 02000000 		.4byte	.LFE7-.LFB7
 2706 0040 00000000 		.4byte	.LFB8
 2707 0044 28000000 		.4byte	.LFE8-.LFB8
 2708 0048 00000000 		.4byte	.LFB9
 2709 004c 2C000000 		.4byte	.LFE9-.LFB9
 2710 0050 00000000 		.4byte	.LFB10
 2711 0054 10000000 		.4byte	.LFE10-.LFB10
 2712 0058 00000000 		.4byte	.LFB11
 2713 005c 1C000000 		.4byte	.LFE11-.LFB11
 2714 0060 00000000 		.4byte	.LFB12
 2715 0064 18000000 		.4byte	.LFE12-.LFB12
 2716 0068 00000000 		.4byte	.LFB13
 2717 006c 10000000 		.4byte	.LFE13-.LFB13
 2718 0070 00000000 		.4byte	.LFB14
 2719 0074 10000000 		.4byte	.LFE14-.LFB14
 2720 0078 00000000 		.4byte	.LFB15
 2721 007c 1C000000 		.4byte	.LFE15-.LFB15
 2722 0080 00000000 		.4byte	.LFB16
 2723 0084 1C000000 		.4byte	.LFE16-.LFB16
 2724 0088 00000000 		.4byte	.LFB17
 2725 008c 5C000000 		.4byte	.LFE17-.LFB17
 2726 0090 00000000 		.4byte	.LFB18
 2727 0094 40000000 		.4byte	.LFE18-.LFB18
 2728 0098 00000000 		.4byte	.LFB19
 2729 009c 48000000 		.4byte	.LFE19-.LFB19
 2730 00a0 00000000 		.4byte	0
 2731 00a4 00000000 		.4byte	0
 2732              		.section	.debug_ranges,"",%progbits
 2733              	.Ldebug_ranges0:
 2734 0000 00000000 		.4byte	.LFB3
 2735 0004 88010000 		.4byte	.LFE3
 2736 0008 00000000 		.4byte	.LFB4
 2737 000c 30000000 		.4byte	.LFE4
 2738 0010 00000000 		.4byte	.LFB2
 2739 0014 20000000 		.4byte	.LFE2
 2740 0018 00000000 		.4byte	.LFB5
 2741 001c 10000000 		.4byte	.LFE5
 2742 0020 00000000 		.4byte	.LFB6
 2743 0024 0C000000 		.4byte	.LFE6
 2744 0028 00000000 		.4byte	.LFB7
 2745 002c 02000000 		.4byte	.LFE7
 2746 0030 00000000 		.4byte	.LFB8
 2747 0034 28000000 		.4byte	.LFE8
 2748 0038 00000000 		.4byte	.LFB9
 2749 003c 2C000000 		.4byte	.LFE9
 2750 0040 00000000 		.4byte	.LFB10
 2751 0044 10000000 		.4byte	.LFE10
 2752 0048 00000000 		.4byte	.LFB11
 2753 004c 1C000000 		.4byte	.LFE11
 2754 0050 00000000 		.4byte	.LFB12
 2755 0054 18000000 		.4byte	.LFE12
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 65


 2756 0058 00000000 		.4byte	.LFB13
 2757 005c 10000000 		.4byte	.LFE13
 2758 0060 00000000 		.4byte	.LFB14
 2759 0064 10000000 		.4byte	.LFE14
 2760 0068 00000000 		.4byte	.LFB15
 2761 006c 1C000000 		.4byte	.LFE15
 2762 0070 00000000 		.4byte	.LFB16
 2763 0074 1C000000 		.4byte	.LFE16
 2764 0078 00000000 		.4byte	.LFB17
 2765 007c 5C000000 		.4byte	.LFE17
 2766 0080 00000000 		.4byte	.LFB18
 2767 0084 40000000 		.4byte	.LFE18
 2768 0088 00000000 		.4byte	.LFB19
 2769 008c 48000000 		.4byte	.LFE19
 2770 0090 00000000 		.4byte	0
 2771 0094 00000000 		.4byte	0
 2772              		.section	.debug_line,"",%progbits
 2773              	.Ldebug_line0:
 2774 0000 8B020000 		.section	.debug_str,"MS",%progbits,1
 2774      02004B00 
 2774      00000201 
 2774      FB0E0D00 
 2774      01010101 
 2775              	.LASF10:
 2776 0000 75696E74 		.ascii	"uint16\000"
 2776      313600
 2777              	.LASF49:
 2778 0007 61646347 		.ascii	"adcGain\000"
 2778      61696E00 
 2779              	.LASF24:
 2780 000f 636F756E 		.ascii	"counts\000"
 2780      747300
 2781              	.LASF54:
 2782 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2782      436F756E 
 2782      7473546F 
 2782      5F566F6C 
 2782      747300
 2783              	.LASF26:
 2784 0029 4144435F 		.ascii	"ADC_Init\000"
 2784      496E6974 
 2784      00
 2785              	.LASF64:
 2786 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2786      43313120 
 2786      352E342E 
 2786      31203230 
 2786      31363036 
 2787 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2787      20726576 
 2787      6973696F 
 2787      6E203233 
 2787      37373135 
 2788 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2788      66756E63 
 2788      74696F6E 
 2788      2D736563 
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 66


 2788      74696F6E 
 2789              	.LASF7:
 2790 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2790      206C6F6E 
 2790      6720756E 
 2790      7369676E 
 2790      65642069 
 2791              	.LASF25:
 2792 00d7 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2792      496E7075 
 2792      7473506C 
 2792      6163656D 
 2792      656E7400 
 2793              	.LASF30:
 2794 00eb 4144435F 		.ascii	"ADC_StartConvert\000"
 2794      53746172 
 2794      74436F6E 
 2794      76657274 
 2794      00
 2795              	.LASF6:
 2796 00fc 6C6F6E67 		.ascii	"long long int\000"
 2796      206C6F6E 
 2796      6720696E 
 2796      7400
 2797              	.LASF0:
 2798 010a 7369676E 		.ascii	"signed char\000"
 2798      65642063 
 2798      68617200 
 2799              	.LASF32:
 2800 0116 73746174 		.ascii	"status\000"
 2800      757300
 2801              	.LASF13:
 2802 011d 696E7433 		.ascii	"int32\000"
 2802      3200
 2803              	.LASF28:
 2804 0123 4144435F 		.ascii	"ADC_Start\000"
 2804      53746172 
 2804      7400
 2805              	.LASF4:
 2806 012d 6C6F6E67 		.ascii	"long int\000"
 2806      20696E74 
 2806      00
 2807              	.LASF53:
 2808 0136 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2808      436F756E 
 2808      7473546F 
 2808      5F75566F 
 2808      6C747300 
 2809              	.LASF59:
 2810 014a 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2810      636F756E 
 2810      74735065 
 2810      72313056 
 2810      6F6C7400 
 2811              	.LASF9:
 2812 015e 75696E74 		.ascii	"uint8\000"
 2812      3800
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 67


 2813              	.LASF62:
 2814 0164 43794465 		.ascii	"CyDelayUs\000"
 2814      6C617955 
 2814      7300
 2815              	.LASF16:
 2816 016e 646F7562 		.ascii	"double\000"
 2816      6C6500
 2817              	.LASF11:
 2818 0175 75696E74 		.ascii	"uint32\000"
 2818      333200
 2819              	.LASF39:
 2820 017c 6D61736B 		.ascii	"mask\000"
 2820      00
 2821              	.LASF57:
 2822 0181 4144435F 		.ascii	"ADC_initVar\000"
 2822      696E6974 
 2822      56617200 
 2823              	.LASF35:
 2824 018d 7265744D 		.ascii	"retMode\000"
 2824      6F646500 
 2825              	.LASF44:
 2826 0195 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2826      5365744C 
 2826      696D6974 
 2826      4D61736B 
 2826      00
 2827              	.LASF8:
 2828 01a6 756E7369 		.ascii	"unsigned int\000"
 2828      676E6564 
 2828      20696E74 
 2828      00
 2829              	.LASF67:
 2830 01b3 75566F6C 		.ascii	"uVolts\000"
 2830      747300
 2831              	.LASF5:
 2832 01ba 6C6F6E67 		.ascii	"long unsigned int\000"
 2832      20756E73 
 2832      69676E65 
 2832      6420696E 
 2832      7400
 2833              	.LASF45:
 2834 01cc 4144435F 		.ascii	"ADC_SetSatMask\000"
 2834      53657453 
 2834      61744D61 
 2834      736B00
 2835              	.LASF55:
 2836 01db 766F6C74 		.ascii	"volts\000"
 2836      7300
 2837              	.LASF23:
 2838 01e1 746D7052 		.ascii	"tmpRegVal\000"
 2838      65675661 
 2838      6C00
 2839              	.LASF3:
 2840 01eb 73686F72 		.ascii	"short unsigned int\000"
 2840      7420756E 
 2840      7369676E 
 2840      65642069 
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 68


 2840      6E7400
 2841              	.LASF61:
 2842 01fe 4379496E 		.ascii	"CyIntSetVector\000"
 2842      74536574 
 2842      56656374 
 2842      6F7200
 2843              	.LASF31:
 2844 020d 4144435F 		.ascii	"ADC_StopConvert\000"
 2844      53746F70 
 2844      436F6E76 
 2844      65727400 
 2845              	.LASF52:
 2846 021d 6D566F6C 		.ascii	"mVolts\000"
 2846      747300
 2847              	.LASF19:
 2848 0224 72656733 		.ascii	"reg32\000"
 2848      3200
 2849              	.LASF14:
 2850 022a 666C6F61 		.ascii	"float32\000"
 2850      74333200 
 2851              	.LASF21:
 2852 0232 73697A65 		.ascii	"sizetype\000"
 2852      74797065 
 2852      00
 2853              	.LASF41:
 2854 023b 6C6F774C 		.ascii	"lowLimit\000"
 2854      696D6974 
 2854      00
 2855              	.LASF20:
 2856 0244 6C6F6E67 		.ascii	"long double\000"
 2856      20646F75 
 2856      626C6500 
 2857              	.LASF42:
 2858 0250 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2858      53657448 
 2858      6967684C 
 2858      696D6974 
 2858      00
 2859              	.LASF33:
 2860 0261 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2860      4973456E 
 2860      64436F6E 
 2860      76657273 
 2860      696F6E00 
 2861              	.LASF17:
 2862 0275 696E7436 		.ascii	"int64\000"
 2862      3400
 2863              	.LASF60:
 2864 027b 4379496E 		.ascii	"CyIntSetPriority\000"
 2864      74536574 
 2864      5072696F 
 2864      72697479 
 2864      00
 2865              	.LASF38:
 2866 028c 4144435F 		.ascii	"ADC_SetChanMask\000"
 2866      53657443 
 2866      68616E4D 
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 69


 2866      61736B00 
 2867              	.LASF65:
 2868 029c 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2868      72617465 
 2868      645F536F 
 2868      75726365 
 2868      5C50536F 
 2869              	.LASF48:
 2870 02b9 4144435F 		.ascii	"ADC_SetGain\000"
 2870      53657447 
 2870      61696E00 
 2871              	.LASF15:
 2872 02c5 666C6F61 		.ascii	"float\000"
 2872      7400
 2873              	.LASF43:
 2874 02cb 68696768 		.ascii	"highLimit\000"
 2874      4C696D69 
 2874      7400
 2875              	.LASF50:
 2876 02d5 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2876      436F756E 
 2876      7473546F 
 2876      5F6D566F 
 2876      6C747300 
 2877              	.LASF40:
 2878 02e9 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2878      5365744C 
 2878      6F774C69 
 2878      6D697400 
 2879              	.LASF63:
 2880 02f9 43794861 		.ascii	"CyHalt\000"
 2880      6C7400
 2881              	.LASF1:
 2882 0300 756E7369 		.ascii	"unsigned char\000"
 2882      676E6564 
 2882      20636861 
 2882      7200
 2883              	.LASF58:
 2884 030e 4144435F 		.ascii	"ADC_offset\000"
 2884      6F666673 
 2884      657400
 2885              	.LASF2:
 2886 0319 73686F72 		.ascii	"short int\000"
 2886      7420696E 
 2886      7400
 2887              	.LASF29:
 2888 0323 4144435F 		.ascii	"ADC_Stop\000"
 2888      53746F70 
 2888      00
 2889              	.LASF22:
 2890 032c 63684E75 		.ascii	"chNum\000"
 2890      6D00
 2891              	.LASF36:
 2892 0332 6368616E 		.ascii	"chan\000"
 2892      00
 2893              	.LASF18:
 2894 0337 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\Intern\AppData\Local\Temp\ccUXnh9k.s 			page 70


 2894      00
 2895              	.LASF56:
 2896 033c 4144435F 		.ascii	"ADC_channelsConfig\000"
 2896      6368616E 
 2896      6E656C73 
 2896      436F6E66 
 2896      696700
 2897              	.LASF66:
 2898 034f 433A5C55 		.ascii	"C:\\Users\\Intern\\Documents\\GitHub\\UV-Sticker\\P"
 2898      73657273 
 2898      5C496E74 
 2898      65726E5C 
 2898      446F6375 
 2899 037c 736F635C 		.ascii	"soc\\UV-Project\\UV-SG-TEMP.cydsn\000"
 2899      55562D50 
 2899      726F6A65 
 2899      63745C55 
 2899      562D5347 
 2900              	.LASF47:
 2901 039c 6F666673 		.ascii	"offset\000"
 2901      657400
 2902              	.LASF51:
 2903 03a3 61646343 		.ascii	"adcCounts\000"
 2903      6F756E74 
 2903      7300
 2904              	.LASF27:
 2905 03ad 4144435F 		.ascii	"ADC_Enable\000"
 2905      456E6162 
 2905      6C6500
 2906              	.LASF12:
 2907 03b8 696E7431 		.ascii	"int16\000"
 2907      3600
 2908              	.LASF46:
 2909 03be 4144435F 		.ascii	"ADC_SetOffset\000"
 2909      5365744F 
 2909      66667365 
 2909      7400
 2910              	.LASF37:
 2911 03cc 72657375 		.ascii	"result\000"
 2911      6C7400
 2912              	.LASF34:
 2913 03d3 4144435F 		.ascii	"ADC_GetResult16\000"
 2913      47657452 
 2913      6573756C 
 2913      74313600 
 2914              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
